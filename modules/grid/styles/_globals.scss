/*---------------------------------------------------------------------------*\
  GRID LIBRARY
\*---------------------------------------------------------------------------*/

@import "settings";



/**
 * Reverse a list or map.
 * Used to reverse the breakpoint map if mobile first.
 * Source: http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/
 */
@function grid-reverse($list, $recursive: false) {
    $result: ();

    @for $i from length($list)*-1 through -1 {
        @if type-of(nth($list, abs($i))) == list and $recursive {
            $result: append($result, reverse(nth($list, abs($i)), $recursive));      
        }
        @else {
            $result: append($result, nth($list, abs($i)));
        }
    }

    @return $result;
}



/**
 * Builder mixin.
 *
 * Creates column and modifier classes based on input and grid settings.
 *
 * $col: Should be the number of columns to span.
 * $ext: Optional. The extension to use for the breakpoint classes.
 *       The 'md' in '.col-12-md'
 */
@mixin grid-create-width($col, $ext: "") {

    /**
     * Prepend a seperator onto the extension if there is one.
     */
    @if $ext != "" {
        $ext: "-" + $ext;
    }

    /**
     * Column width class.
     * Sets the width as a simple fraction.
     * Extend the base column if the class is outside of a media query.
     */
    .col-#{$col}#{$ext} {
        @if $ext == "" {
            @extend %col;
        }
        width: percentage($col/$grid-column-count);
    }
    /**
     * Utilize relative positioning and the left property to push/pull columns.
     */
    @if $grid-use-push {
        .push-#{$col}#{$ext} {
            left: percentage($col/$grid-column-count);
        }
    }
    @if $grid-use-pull {
        .pull-#{$col}#{$ext} {
            left: -(percentage($col/$grid-column-count));
        }
    }
    /**
     * Use a margin to offset columns so no other columns can use that space.
     */
    @if $grid-use-pull {
        .offset-#{$col}#{$ext} {
            margin-left: percentage($col/$grid-column-count);
        }
    }
}

