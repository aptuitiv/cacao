/*===========================================================================*\
  CACAO GLOBAL MIXINS
\*===========================================================================*/

/**
 * CONTENTS:
 * - Helpers & Utilities
 * - Cross-browser Fallbacks
 */

@import "defaults";




/* Helpers & Utilities
  -------------------------------------------------------------------------- */

/**
 * Used to set a font size in ems with a px fallback.
 * When on context is specified the global font size will be used.
 * Optionally include a line-height that snaps to the site's global rhythm.
 * Optionally add !important for use in utilites.
 */

@mixin cacao-font-size($font-size, $context: $g-textSize-base, $line-height: false, $important: false){
    // remove units
    $font-size: $font-size / ($font-size * 0 + 1);
    $context: $context / ($context * 0 + 1);

    // important switch
    @if $important == true {
        $important: " !important";
    } @else {
        $important: "";
    }

    // output
    font-size: ($font-size * 1px)#{$important};
    font-size: (($font-size / $context)*1em)#{$important};
    @if $line-height == true {
        line-height: (ceil($font-size / $g-rhythm) * ($g-rhythm / $font-size))#{$important};
    }
}

/**
 * Micro clearfix for modern browsers
 * See: http://nicolasgallagher.com/micro-clearfix-hack/
 *
 * Applied to elements to allow their heights to 'clear' or contain floats.
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

@mixin cacao-clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/**
 * Create a CSS triangle (using borders).
 */

@mixin cacao-triangle($triangle-size, $triangle-color, $triangle-direction) {
    content: "";
    display: inline-block;
    width: 0;
    height: 0;
    border-width: $triangle-size;
    border-style: solid;
    @if ($triangle-direction == up) {
        border-color: transparent transparent $triangle-color transparent;
    }
    @if ($triangle-direction == down) {
        border-color: transparent $triangle-color transparent transparent;
    }
    @if ($triangle-direction == left) {
        border-color: transparent $triangle-color transparent transparent ;
    }
    @if ($triangle-direction == right) {
        border-color: transparent transparent transparent $triangle-color;
    }
}

/**
 * Create a hamburger menu icon with box shadow.
 */

@mixin cacao-hamburger($width, $left, $top, $thickness, $gap, $color, $hover-color) {
    span:after {
        content: '';
        position: absolute;
        display: block;
        width: $width;
        height: 0;
        box-shadow: 0 0 0 $thickness $color,
        0 $gap + $thickness 0 $thickness $color,
        0 (2 * $gap + 2*$thickness) 0 $thickness $color;
    }
    span:hover:after {
        box-shadow: 0 0 0 $thickness $hover-color,
        0 $gap + $thickness 0 $thickness $hover-color,
        0 (2 * $gap + 2*$thickness) 0 $thickness $hover-color;
    }
}

/**
 * http://stackoverflow.com/questions/12228548/findinq-equivalent-color-with-opacity
 */

@mixin cacao-bg-alpha-calc($desired_colour, $desired_alpha, $background_colour: white) {
    $r3: red($desired_colour);
    $g3: green($desired_colour);
    $b3: blue($desired_colour);

    $r2: red($background_colour);
    $g2: green($background_colour);
    $b2: blue($background_colour);

    // x1 = (x3 - x2 + x2 * a1) / a1
    $r1: ( $r3 - $r2 + ($r2 * $desired_alpha) ) / $desired_alpha;
    $g1: ( $g3 - $g2 + ($g2 * $desired_alpha) ) / $desired_alpha;
    $b1: ( $b3 - $b2 + ($b2 * $desired_alpha) ) / $desired_alpha;

    background-color: $desired_colour;
    background-color: rgba($r1, $g1, $b1, $desired_alpha);

}



/* Cross-browser Fallbacks
  -------------------------------------------------------------------------- */

/**
 * Linear gradient with filter fallback.
 *
 * 1. Chrome 10+, Safari 5.1+, iOS 5+.
 * 2. IE 6-9.
 */

@mixin cacao-linear-gradient($fromColor, $toColor) {
    background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* 1 */
    background-image:         linear-gradient(to bottom, $fromColor, $toColor);
    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}'); /* 2 */
}

/**
 * Opacity with fallback.
 *
 * 1. IE 8.
 */

@mixin cacao-opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); /* 1 */
}

/**
 * Grayscale filter.
 *
 * 1. New Webkit.
 * 2. Firefox 3.5+, IE 10+.
 * 3. IE 6-9.
 */

@mixin cacao-greyscale($value: on) {
    @if $value == on {
        -webkit-filter: grayscale(100%); /* 1 */
        -ms-filter: grayscale(100%);
        filter: grayscale(100%);
        filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* 2 */
        filter: gray; /* 3 */
    } @else {
        -webkit-filter: none;
        -ms-filter: none;
        filter: none;
    }
}

/**
 * Input placeholder colors.
 *
 * 1. Firefox.
 * 2. https://github.com/twbs/bootstrap/pull/11526
 * 3. Internet Explorer 10+.
 * 4. Safari and Chrome.
 */

@mixin cacao-placeholder($color) {
    &::-moz-placeholder { /* 1 */
        color: $color;
        opacity: 1; /* 2 */
    }
    &:-ms-input-placeholder { /* 3 */
        color: $color;
    }
    &::-webkit-input-placeholder { /* 4 */
        color: $color;
    }
}

