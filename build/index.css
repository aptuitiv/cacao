/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  box-sizing: content-box; /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* ==========================================================================
   Base
   ========================================================================== */

/**
 * 1. By default, `<body>` has no `background-color` so we set one
 *    as a best practice.
 */

body {
    background: #fff; /* 1 */
}

/**
 * 1. Style alt text.
 * 2. Scale image fluidly within its container. Making this default has some
 *    known issues but can be very convenient when users are inserting images
 *    onto a page with a rich text editor.
 *    See https://github.com/twbs/bootstrap/issues/18178
 * 3. Align middle to prevent white space created by aligning to text baseline.
 */

img {
    font-style: italic; /* 1 */
    height: auto; /* 2 */
    max-width: 100%; /* 2 */
    vertical-align: middle; /* 3 */
}

/**
 * 1. Remove default border from iframes
 */

iframe {
    border: 0; /* 1 */
}

/**
 * iOS "clickable elements" fix for role="button"
 *
 * Fixes "clickability" issue (and more generally, the firing of events such as
 * focus as well) for traditionally non-focusable elements with role="button"
 * see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile
 */

[role='button'] {
    cursor: pointer;
}

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex='-1']:focus {
    outline: none !important;
}

/**
 * Avoid 300ms click delay on touch devices that support the `touch-action` CSS
 * property.
 *
 * In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch
 * devices and IE Mobile 10-11 DON'T remove the click delay when
 * `<meta name="viewport" content="width=device-width">` is present. However,
 * they DO support removing the click delay via `touch-action: manipulation`.
 * See:
 * - http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
 * - http://caniuse.com/#feat=css-touch-action
 * - http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
 */

a,
area,
button,
[role='button'],
input,
label,
select,
summary,
textarea {
    -ms-touch-action: manipulation;
        touch-action: manipulation;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
    outline: 1px dotted;
    /* stylelint-disable */
    outline: 5px auto -webkit-focus-ring-color;
    /* stylelint-enable */
}

/**
 * Always hide an element with the `hidden` HTML attribute (from PureCSS).
 */

[hidden] {
    display: none !important;
}

/* ==========================================================================
   Code
   ========================================================================== */

/**
 * Inline and block code styles
 */

code,
kbd,
pre,
samp {
    color: inherit;
    font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;
    font-size: 90%;
    font-weight: inherit;
    letter-spacing: normal;
    line-height: 1.5;
}

/**
 * Blocks of code or pre-formatted text
 */

pre {
    margin: 0 0 24px;
    margin: 0 0 2.4rem;
}

/* ==========================================================================
   Forms
   ========================================================================== */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/**
 * 1. Allow labels can use `margin` for spacing.
 */

label {
    display: inline-block; /* 1 */
}

/**
 * 1. iOS adds rounded borders by default
 * 2. Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc
 *    are properly inherited. However, `line-height` isn't addressed there.
 *    Using this ensures we don't need to unnecessarily redeclare the global
 *    font stack.
 * 3. Remove all `margin`s so our classes don't have to do it themselves.
 */

input,
button,
select,
textarea {
    border-radius: 0; /* 1 */
    line-height: inherit; /* 2 */
    margin: 0; /* 3 */
}

/**
 * 1. Only allow for vertical resizing to prevent layouts from breaking.
 * 2. Easier to read default alignment.
 */

textarea {
    resize: vertical; /* 1 */
    vertical-align: top; /* 2 */
}

/**
 * 1. Overrides the extra rounded corners on search inputs in iOS so that our
 * custom classes can properly style them without using an attribute selector.
 */

input[type='search'] {
    -webkit-appearance: none; /* 1 */
}

/* ==========================================================================
   Tables
   ========================================================================== */

table {
    margin-bottom: 24px;
    margin-bottom: 2.4rem;
}

td,
th {
    padding: 0;
}

th {
    color: inherit;
}

/**
 * Keep text alignment consistent, reset default centered text
 */

caption,
th {
    text-align: left;
}

caption {
    caption-side: bottom;
    margin-top: 24px;
    margin-top: 2.4rem;
}

/* ==========================================================================
   Typography
   ========================================================================== */

/**
 * Note: This sets the <html> element's font-size to 62.5%, which
 * equals 10px. This allows rem units to be calculated more intuitively.
 */

/* headings */

/* General
   ========================================================================== */

/**
 * Make sure pxrem is configured to this size.
 * 62.5% = 10px = 1rem
 */

html {
    font-size: 62.5%;
}

/**
 * Scale down text on small screens
 */

@media (max-width: 650px) {
    html {
        font-size: 56.25%;
    }
}

/**
 * Set body defaults for other elements to inherit
 */

body {
    color: #333;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: 16px;
    font-size: 1.6rem;
    font-weight: 400;
    letter-spacing: normal;
    line-height: 24px;
    line-height: 2.4rem;
}

/**
 * Consistent spacing on block elements
 */

address,
blockquote,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
ol,
p,
ul {
    margin: 0 0 24px;
    margin: 0 0 2.4rem;
}

/**
 * Links
 */

a {
    color: inherit;
    text-decoration: underline;
}

a:hover {
    color: inherit;
    text-decoration: underline;
}

/**
 * Lists
 */

ol,
ul {
    padding-left: 2.4em;
}

li > ol,
li > ul {
    margin-bottom: 0;
}

dt {
    font-weight: 700;
}

dd {
    margin: 0;
}

/**
 * Inline abbreviations
 */

abbr[title] {
    border-bottom: 1px dotted;
    cursor: help;
}

/**
 * Reset browser default
 */

address {
    font-style: normal;
}

/**
 * 1. Remove default hr shading.
 * 2. Inherit text or parent border color.
 */

hr {
    border-style: solid; /* 1 */
    border-width: 1px 0 0 0;
    color: inherit; /* 2 */
}

/* Headings
   ========================================================================== */

h1,
h2,
h3,
h4,
h5,
h6 {
    color: inherit;
    font-family: inherit;
    font-weight: inherit;
    letter-spacing: inherit;
}

h1 {
    font-size: 48px;
    font-size: 4.8rem;
    line-height: 60px;
    line-height: 6rem;
}

h2 {
    font-size: 32px;
    font-size: 3.2rem;
    line-height: 36px;
    line-height: 3.6rem;
}

h3 {
    font-size: 28px;
    font-size: 2.8rem;
    line-height: 36px;
    line-height: 3.6rem;
}

h4 {
    font-size: 24px;
    font-size: 2.4rem;
    line-height: 36px;
    line-height: 3.6rem;
}

h5 {
    font-size: 20px;
    font-size: 2rem;
    line-height: 24px;
    line-height: 2.4rem;
}

h6 {
    font-size: 16px;
    font-size: 1.6rem;
    line-height: 24px;
    line-height: 2.4rem;
}

/* ==========================================================================
   Aptuitiv Drilldown Menu
   ========================================================================== */

/**
 * Styles drilldown menu elements created by the Aptuitiv Drilldown Menu plugin.
 *
 * https://github.com/aptuitiv/ap-drilldown-menu
 *
 * To use: wrap a <ul> in a div with the id `ap-ddmenu-root`. Currently only
 * one unique menu is supported.
 *
 * This component uses an ID to override styles placed on the <ul> and child
 * elements. This will cause problems if the <ul> uses IDs at all to style its
 * elements.
 */

/* Variables
   ========================================================================== */

/* Drilldown elements
   ========================================================================== */

#ap-ddmenu-root {
    display: block;
}

/**
 * Cloned item. Hide until drilldown is active.
 */

.ap-ddmenu-hidden,
.ap-ddmenu-clone {
    display: none;
}

/**
 * Toggle switch, can be placed anywhere.
 */

.ap-ddmenu-toggle {
    background: #111;
    border: none;
    border-radius: .25em;
    color: #fff;
    display: inline-block;
    outline: 0;
    padding: .5em 1em;
}

.ap-ddmenu-toggle:hover {
    color: #fff;
}

/**
 * Header placed above the menu.
 * Contains current text and back link.
 */

.ap-ddmenu-header {
    background: #111;
    color: #fff;
    display: none;
    font-size: 15px;
    height: 1em;
    line-height: 1.5;
    padding: 1em 20px;
    position: relative;
}

.ap-ddmenu-current-text {
    line-height: 1;
    text-align: center;
}

.ap-ddmenu-back {
    color: #fff;
    line-height: 1;
    position: absolute;
    text-decoration: inherit;
}

.ap-ddmenu-back:hover {
    color: #fff;
    text-decoration: underline;
}

/**
 * Link icon indicating a sub menu
 */

.ap-ddmenu-link-icon {
    border-color: transparent;
    border-left-color: inherit;
    border-style: solid;
    border-width: .35em;
    display: none;
    height: 0;
    margin-left: .75em;
    width: 0;
}

/* Mobile state
   ========================================================================== */

@media (max-width: 800px) {

    /**
     * Drilldown elements
     */

    #ap-ddmenu-root {
        display: none;
    }

    .ap-ddmenu-clone,
    .ap-ddmenu-hidden,
    .ap-ddmenu-header {
        display: block;
    }

    .ap-ddmenu-link-icon {
        display: inline-block;
    }

    /**
     * Heavy-handed reset.
     * Attempts to reset any desktop styles applied to the menu.
     */

    #ap-ddmenu-root ul,
    #ap-ddmenu-root li,
    #ap-ddmenu-root li > a {
        background: transparent;
        border: 0;
        box-shadow: none;
        box-sizing: border-box;
        display: block;
        margin: 0;
        padding: 0;
        position: static;
        -webkit-transform: none;
                transform: none;
        width: 100%;
    }

    #ap-ddmenu-root ul {
        background: transparent;
        color: inherit;
        position: relative;
    }

    #ap-ddmenu-root li::after,
    #ap-ddmenu-root li::before,
    #ap-ddmenu-root li > a::after,
    #ap-ddmenu-root li > a::before {
        content: '';
    }

    #ap-ddmenu-root li > a {
        color: inherit;
        font-size: 15px;
        font-weight: 400;
        line-height: 1.5;
        white-space: normal;
    }

    #ap-ddmenu-root li > a:hover {
        color: inherit;
        text-decoration: none;
    }

    #ap-ddmenu-root ul ul {
        bottom: auto;
        display: none;
        left: 100%;
        position: absolute;
        right: auto;
        top: 0;
    }

    /**
     * Drilldown styles
     */

    #ap-ddmenu-root ul {
        background: #fff;
        color: #fff;
        padding-top: .25em;
    }

    #ap-ddmenu-root ul::before,
    #ap-ddmenu-root ul::after {
        content: ' ';
        display: table;
    }
    #ap-ddmenu-root ul::after {
        clear: both;
    }

    #ap-ddmenu-root li {
        margin-bottom: .25em;
    }

    #ap-ddmenu-root li > a {
        color: #333;
        padding: .75em 20px;
    }

    #ap-ddmenu-root li > a:hover,
    #ap-ddmenu-root li > a.is-current,
    #ap-ddmenu-root li > a.is-currentParent {
        color: #000;
        text-decoration: underline;
    }

    #ap-ddmenu-root li.ap-ddmenu-clone > a.is-currentParent {
        color: inherit;
        text-decoration: none;
    }

}

/* ==========================================================================
   Button
   ========================================================================== */

/** @define Button */

/**
 * Provides a structural UI button template ready to be extended
 *
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Prevent button text from being selectable.
 */

.Button {
    background: #999;
    border: 0;
    border-radius: 0;
    box-sizing: border-box; /* 1 */
    color: #fff;
    cursor: pointer;
    display: inline-block;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: 14px;
    font-size: 1.4rem;
    letter-spacing: inherit;
    line-height: 24px;
    line-height: 2.4rem;
    margin: 0;
    padding: 6px 1.5em;
    padding: 0.6rem 1.5em;
    text-align: center;
    text-decoration: none;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; /* 2 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
    border: 0;
    padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
    outline: 1px dotted;
    /* stylelint-disable */
    outline: 5px auto -webkit-focus-ring-color;
    /* stylelint-enable */
}

/**
 * UI States
 */

.Button:hover,
.Button:focus,
.Button:active {
    background: #333;
    color: #fff;
    text-decoration: none;
}

.Button:disabled,
.Button.is-disabled {
    cursor: default;
    opacity: .6;
}

/**
 * Size modifiers
 */

.Button--lg {
    padding: 12px 2em;
    padding: 1.2rem 2em;
}

.Button--sm {
    padding: 0 .75em;
}

/* ==========================================================================
   Constrain
   ========================================================================== */

/** @define Constrain */

/**
 * Constrains an image of unknown size to the specified aspect ratio.
 * The image is potentially cropped using the specified gravity.
 * Similar to FlexEmbed but meant to be used specifically with images.
 *
 * This method will be used until the `object-fit` and `object-position`
 * properties are well supported. http://caniuse.com/#feat=object-fit
 */

/**
 * Constrained image container

 * Apply `background-image` inline or with another class.
 * Constrain ratio is set to 1:1 by default. Use a modifier to change it.
 * Gravity is set to center by default. Use a modifier to change it.
 */

.Constrain {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    box-sizing: border-box;
    display: block;
    padding-bottom: 100%;
    width: 100%;
}

/**
 * Contain images instead of cropping them to fit
 */

.Constrain--contain {
    background-size: contain;
}

/* Constrain ratios
   ========================================================================== */

.Constrain--5by4 {
    padding-bottom: 80%;
}

.Constrain--4by3 {
    padding-bottom: 75%;
}

.Constrain--3by2 {
    padding-bottom: 66.66667%;
}

.Constrain--8by5,
.Constrain--16by10 {
    padding-bottom: 62.5%;
}

.Constrain--16by9 {
    padding-bottom: 56.25%;
}

/* Crop gravities
   ========================================================================== */

/**
 * Gravitate towards edge
 */

.Constrain--top {
    background-position: top center;
}

.Constrain--bottom {
    background-position: bottom center;
}

.Constrain--left {
    background-position: left center;
}

.Constrain--right {
    background-position: right center;
}

/**
 * Gravitate towards corner
 */

.Constrain--topLeft {
    background-position: top left;
}

.Constrain--topRight {
    background-position: top right;
}

.Constrain--bottomLeft {
    background-position: bottom left;
}

.Constrain--bottomRight {
    background-position: bottom right;
}

/* ==========================================================================
   Container
   ========================================================================== */

/** @define Container */

/**
 * Used as a page container that will keep it's content constrained to a
 * certain width.
 */

/**
 * Fluid and centered by default.
 *
 * 1. Ensure that the container width includes margins & padding.
 */

.Container {
    box-sizing: border-box; /* 1 */
    margin-left: auto;
    margin-right: auto;
    max-width: 40em;
}

/**
 * Modifier: Non-fluid, fixed container
 */

.Container--widthFixed {
    width: 40em;
}

/**
 * Modifier: Position container to the left
 */

.Container--alignLeft {
    margin-left: 0;
}

/**
 * Modifier: Position container to the right
 */

.Container--alignRight {
    margin-right: 0;
}

/* ==========================================================================
   Dropdown
   ========================================================================== */

/** @define Dropdown */

/**
 * Drop-down navigation menu.
 */

.Dropdown {
    position: relative;
}

/* Base menu
   ========================================================================== */

.Dropdown-menu {
    background: #a0a0a0;
    box-shadow: 0 22px 35px 0 rgba(0, 0, 0, .1);
    display: none;
    left: 0;
    list-style: none;
    margin: 0;
    min-width: 100%;
    padding: 0;
    position: absolute;
    top: 100%;
    z-index: 999;
}

.Dropdown-menu::before,
.Dropdown-menu::after {
    content: ' ';
    display: table;
}

.Dropdown-menu::after {
    clear: both;
}

/* Menu items
   ========================================================================== */

.Dropdown-item {
    position: relative;
}

/* Menu links
   ========================================================================== */

.Dropdown-link {
    color: #333;
    display: block;
    font-size: inherit;
    font-weight: 400;
    line-height: inherit;
    padding: .5em 1em;
    text-decoration: none;
    white-space: nowrap;
}

.Dropdown-link:hover,
.Dropdown-link.is-current,
.Dropdown-link.is-currentParent {
    color: #000;
}

.Dropdown-link.is-current,
.Dropdown-link.is-currentParent {
    font-weight: 700;
}

.Dropdown-link:hover {
    text-decoration: none;
}

/* State
   ========================================================================== */

/* show sub-menus under hovered items */

.Dropdown:hover > .Dropdown-menu,
.Dropdown-item:hover > .Dropdown-menu {
    display: block;
}

/* display sub-menus under the last item to the right */

.Dropdown.is-last:hover > .Dropdown-menu {
    left: auto;
    right: 0;
}

/* fly-out to the right */

.Dropdown-item:hover > .Dropdown-menu {
    left: 100%;
    top: 0;
    -webkit-transform: none;
            transform: none;
}

/* fly-out to the left if root parent is last item */

.Dropdown.is-last .Dropdown-item:hover > .Dropdown-menu {
    left: auto;
    right: 100%;
}

/* ==========================================================================
   FlexEmbed
   ========================================================================== */

/** @define FlexEmbed */

/**
 * Responsive, intrinsic ratio embeds
 *
 * For use with media embeds – such as videos or slideshows that need to
 * retain a specific aspect ratio but adapt to the width of their containing
 * element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */

.FlexEmbed {
    display: block;
    overflow: hidden;
    position: relative;
}

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */

.FlexEmbed-ratio {
    display: block;
    padding-bottom: 100%;
    width: 100%;
}

/**
 * Modifiers: aspect ratios
 */

.FlexEmbed-ratio--3by1 {
    padding-bottom: 33.333333%;
}

.FlexEmbed-ratio--2by1 {
    padding-bottom: 50%;
}

.FlexEmbed-ratio--16by9 {
    padding-bottom: 56.25%;
}

.FlexEmbed-ratio--4by3 {
    padding-bottom: 75%;
}

/**
 * Fit the content to the aspect ratio
 */

.FlexEmbed-content {
    bottom: 0;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
}

/* ==========================================================================
   Grid
   ========================================================================== */

/** @define Grid */

/**
 * Flex-box grid component with inline-block fallback.
 *
 * Note: Relies on particular dimensions being applied to cells via
 * other classes. For example, `size` utilities.
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.Grid {
    box-sizing: border-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; /* 1 */
    -webkit-flex-flow: row wrap;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    list-style: none; /* 1 */
    margin: 0; /* 1 */
    padding: 0; /* 1 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
    -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
            justify-content: flex-end;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle {
    -webkit-align-items: center;
        -ms-flex-align: center;
                -ms-grid-row-align: center;
            align-items: center;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom {
    -webkit-align-items: flex-end;
        -ms-flex-align: end;
                -ms-grid-row-align: flex-end;
            align-items: flex-end;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
 */

.Grid--fit > .Grid-cell {
    -webkit-flex: 1 1 0%;
        -ms-flex: 1 1 0%;
            flex: 1 1 0%; /* 1 */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 */

.Grid--equalHeight > .Grid-cell {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

/**
 * Modifier: gutters
*/

.Grid--withGutter {
    margin-left: -20px;
    margin-left: -2rem;
}

.Grid--withGutter > .Grid-cell {
    padding-left: 20px;
    padding-left: 2rem;
}

.Grid--withGutterSm {
    margin-left: -10px;
    margin-left: -1rem;
}

.Grid--withGutterSm > .Grid-cell {
    padding-left: 10px;
    padding-left: 1rem;
}

.Grid--withGutterLg {
    margin-left: -40px;
    margin-left: -4rem;
}

.Grid--withGutterLg > .Grid-cell {
    padding-left: 40px;
    padding-left: 4rem;
}

/* Grid cell
   ========================================================================== */

/**
 * Rely on combining `Grid-cell` with a dimension utility or a component
 * class that extends 'grid'.
 *
 * 1. Set flex items to full width by default
 */

.Grid-cell {
    box-sizing: inherit;
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; /* 1 */
    margin: 0;
    padding: 0;
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
    margin: 0 auto;
}

/* ==========================================================================
   Inline-block grid fallback
   ========================================================================== */

/**
 * Fallbacks for browsers that don't support flexbox or don't support flex
 * item wrapping.
 */

/* Grid container
   ========================================================================== */

/**
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 * 3. Ensure consistent default alignment.
 */

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid,
.no-flexbox .Grid {
    display: block; /* 1 */
    font-size: 0; /* 2 */
    text-align: left; /* 3 */
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid--alignCenter,
.no-flexbox .Grid--alignCenter {
    text-align: center;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid--alignRight,
.no-flexbox .Grid--alignRight {
    text-align: right;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid--alignMiddle > .Grid-cell,
.no-flexbox .Grid--alignMiddle > .Grid-cell {
    vertical-align: middle;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid--alignBottom > .Grid-cell,
.no-flexbox .Grid--alignBottom > .Grid-cell {
    vertical-align: bottom;
}

/* Grid cell
   ========================================================================== */

/**
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font changes made in `Grid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid-cell,
.no-flexbox .Grid-cell {
    display: inline-block; /* 1 */
    font-size: 16px;
    font-size: 1.6rem; /* 2 */
    text-align: left; /* 3 */
    vertical-align: top; /* 4 */
    width: 100%; /* 5 */
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Grid-cell--center,
.no-flexbox .Grid-cell--center {
    display: block;
}

/* ==========================================================================
   Image
   ========================================================================== */

/** @define Image; weak */

/**
 * Commonly used image treatments to use on bare <img> tags.
 */

/**
 * Base
 */

.Image {
    box-sizing: border-box;
    height: auto;
    margin-bottom: 12px;
    margin-bottom: 1.2rem;
    max-width: 100%;
}

/**
 * Floated images inside content
 *
 * 1. Make sure image does not take up too much space.
 */

.Image--left,
.Image--right {
    max-width: 40%; /* 1 */
}

.Image--left {
    float: left;
    margin-right: 1em;
}

.Image--right {
    float: right;
    margin-left: 1em;
}

@media (max-width: 500px) {
    .Image--left,
    .Image--right {
        display: block;
        float: none;
        margin-left: 0;
        margin-right: 0;
        max-width: 100%;
    }
}

/* ==========================================================================
   List
   ========================================================================== */

/** @define List; weak */

/**
 * Provides custom layouts for bare lists.
 * Must be applied to a <ul> or an <ol>. Use only one modifier per list.
 */

/**
 * List reset
 * Barebones list, no margins or styles.
 */

.List {
    list-style: none;
    padding-left: 0;
    padding-right: 0;
}

/**
 * Inline list
 * Creates an inline list with inline items.
 */

.List--inline,
.List--spaced,
.List--gutter,
.List--gutterLg,
.List--barred,
.List--dotted,
.List--inline > li,
.List--spaced > li,
.List--gutter > li,
.List--gutterLg > li,
.List--barred > li,
.List--dotted > li {
    display: inline-block;
}

/**
 * Spaced list
 * Adds spacing between the inline items.
 *
 * Extends `.List--inline`.
 */

.List--spaced {
    margin-left: -1em;
}

.List--spaced > li {
    margin-left: 1em;
}

/**
 * List with gutters
 * Adds gutters between the inline items.
 *
 * Extends `.List--inline`.
 */

.List--gutter {
    margin-left: -20px;
    margin-left: -2rem;
}

.List--gutter > li {
    margin-left: 20px;
    margin-left: 2rem;
}

/**
 * List with large gutters
 * Adds gutters between the inline items.
 *
 * Extends `.List--inline`.
 */

.List--gutterLg {
    margin-left: -40px;
    margin-left: -4rem;
}

.List--gutterLg > li {
    margin-left: 40px;
    margin-left: 4rem;
}

/**
 * Barred list
 * Adds vertical bars between the inline items.
 * White space will add extra spacing.
 *
 * Extends `.List--inline`.
 */

.List--barred > li::before {
    content: '|';
    margin-left: 0.25em;
    margin-right: .5em;
}

.List--barred > li.is-first::before,
.List--barred > li:first-child::before {
    content: none;
    display: none;
    margin-left: 0;
    margin-right: 0;
}

/**
 * Dotted list
 * Adds bullets between the inline items.
 * White space will add extra spacing.
 *
 * Extends `.List--inline`.
 */

.List--dotted > li::before {
    content: '•';
    margin-left: 0.25em;
    margin-right: .5em;
}

.List--dotted > li.is-first::before,
.List--dotted > li:first-child::before {
    content: none;
    display: none;
    margin-left: 0;
    margin-right: 0;
}

/* ==========================================================================
   Main Navigation
   ========================================================================== */

/** @define MainNav */

/**
 * Base menu
 */

.MainNav {
    display: inline-block;
    font-family: inherit;
    font-size: 15px;
    line-height: 1.5;
    list-style: none;
    margin: 0 0 0 -1em;
    padding: 0;
}

/**
 * Items
 */

.MainNav-item {
    display: inline-block;
    margin-left: 1em;
}

/**
 * Links
 */

.MainNav-link {
    background: transparent;
    color: #333;
    display: block;
    padding: .5em 15px;
    padding: .5em 1.5rem;
    text-decoration: none;
}

.MainNav-item.is-current > .MainNav-link,
.MainNav-item.is-currentParent > .MainNav-link,
.MainNav-item:hover > .MainNav-link {
    background: transparent;
    color: #000;
    text-decoration: none;
}

/* ==========================================================================
   Media
   ========================================================================== */

/** @define Media */

/**
 * The media object is an abstract element used as the basis for building
 * more complex and repetitive components (like blog comments, Tweets, etc).
 *
 * Uses a fallback for browsers that do not support flexbox. Fallbacks are
 * applied when `<html>` has a class of `no-flexbox`.
 *
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/
 */

/* Base
   ========================================================================== */

.Media {
    box-sizing: border-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

/**
 * Modifiers: Gutters
 */

.Media--withGutter {
    margin-left: -20px;
    margin-left: -2rem;
}

.Media--withGutter > .Media-content,
.Media--withGutter > .Media-subject {
    padding-left: 20px;
    padding-left: 2rem;
}

.Media--withGutterSm {
    margin-left: -10px;
    margin-left: -1rem;
}

.Media--withGutterSm > .Media-content,
.Media--withGutterSm > .Media-subject {
    padding-left: 10px;
    padding-left: 1rem;
}

/* Content
   ========================================================================== */

/**
 * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
 */

.Media-content {
    -webkit-flex: 1 1 0%;
        -ms-flex: 1 1 0%;
            flex: 1 1 0%; /* 1 */
}

/* Subjects
   ========================================================================== */

/**
 * The media content, or subject that the body is related to.
 */

.Media-subject {
}

/**
 * Modifier: Align content vertically center.
 */

.Media-subject--middle {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center;
}

/**
 * Modifier: Align content to the bottom.
 */

.Media-subject--bottom {
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end;
}

/* Object element
   ========================================================================== */

/**
 * Media image
 * Must be applied to objects that are children of `.Media-content`. This
 * is typically an image, video, etc...
 */

.Media-object {
    display: block;
}

/* ==========================================================================
   Fallback
   ========================================================================== */

/**
 * 1. 100% width doesn't act as expected when used with gutters
 */

/* postcss-bem-linter: ignore */

.no-flexwrap .Media,
.no-flexbox .Media {
    display: block;
    width: auto; /* 1 */
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Media-content,
.no-flexbox .Media-content {
    width: 100%;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Media,
.no-flexwrap .Media-content,
.no-flexbox .Media,
.no-flexbox .Media-content {
    overflow: hidden;
    zoom: 1;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Media-content,
.no-flexwrap .Media-subject,
.no-flexbox .Media-content,
.no-flexbox .Media-subject {
    display: table-cell;
    vertical-align: top;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Media-subject--middle,
.no-flexbox .Media-subject--middle {
    vertical-align: middle;
}

/* postcss-bem-linter: ignore */

.no-flexwrap .Media-subject--bottom,
.no-flexbox .Media-subject--bottom {
    vertical-align: bottom;
}

/**
 * 1. Fix collapse in webkit from max-width: 100% and display: table-cell.
 */

/* postcss-bem-linter: ignore */

.no-flexwrap .Media-object,
.no-flexbox .Media-object {
    max-width: none; /* 1 */
}

/* ==========================================================================
   SelectInput
   ========================================================================== */

/** @define SelectInput; weak */

/**
 * Provides custom styles for select menu input fields.
 * Any <select> that is a child of a `.SelectInput` element will be styled.
 */

/**
 * Field wrapper that theme is applied to
 */

.SelectInput {
    background: #fff;
    border: 1px solid #333;
    box-sizing: border-box;
    color: #333;
    display: inline-block;
    outline: none;
    position: relative;
}

/**
 * Dropdown arrow element
 */

.SelectInput::before {
    background: none;
    border: 6px solid;
    border-color: #333 transparent transparent transparent;
    content: '';
    height: 0;
    padding: 0;
    position: absolute;
    right: 6px;
    right: .6rem;
    top: 50%;
    -webkit-transform: translateY(-25%);
            transform: translateY(-25%);
    width: 0;
}

/**
 * 1. Select input reset
 * 2. Appear above the `.SelectInput::before` element to allow for clicking.
 */

.SelectInput > select {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none; /* 1 */
    background: transparent; /* 1 */
    border: 0; /* 1 */
    box-sizing: border-box;
    display: block;
    margin: 0; /* 1 */
    outline: 0; /* 1 */
    padding: 0 23px 0 3.5px;
    padding: 0 2.3rem 0 .35rem;
    position: relative; /* 2 */
    width: 100%;
}

/**
 * UI states
 */

.SelectInput.is-invalid {
    color: #f00;
    outline: 1px solid #f00;
}

.SelectInput.is-valid {
    color: #0f0;
    outline: 1px solid #0f0;
}

/* ==========================================================================
   TextInput
   ========================================================================== */

/** @define TextInput */

/**
 * Provides custom styling for text input fields and textareas
 */

.TextInput {
    background: #fff;
    border: 1px solid #333;
    border-radius: 0;
    box-sizing: border-box;
    color: #333;
    outline: none;
    padding: .25em .5em;
}

/**
 * UI states
 */

.TextInput.is-invalid {
    color: #f00;
    outline: 1px solid #f00;
}

.TextInput.is-valid {
    color: #0f0;
    outline: 1px solid #0f0;
}

/* ==========================================================================
   Triangle
   ========================================================================== */

/** @define Triangle */

/**
 * Inline triangle element
 *
 * Scales with font size and inherits parent element's foreground color.
 * Must be used with a modifier to specify direction.
 *
 * 1. Attempt to align to true vertical middle instead of middle of text.
 */

.Triangle {
    background: transparent;
    border: 0 solid transparent;
    display: inline-block;
    height: 0;
    vertical-align: -10%; /* 1 */
    width: 0;
}

/**
 * Direction modifiers
 *
 * 1. Only apply border width if the triangle is used correctly (has at least
 *    one direction modifier).
 * 2. Translating the element by 25% in the direction it is pointing will
 *    center it.
 */

.Triangle--up,
.Triangle--down,
.Triangle--left,
.Triangle--right {
    border-width: .5em; /* 1 */
}

.Triangle--up {
    border-bottom-color: inherit;
    -webkit-transform: translateY(-25%);
            transform: translateY(-25%); /* 2 */
}

.Triangle--down {
    border-top-color: inherit;
    -webkit-transform: translateY(25%);
            transform: translateY(25%); /* 2 */
}

.Triangle--left {
    border-right-color: inherit;
    -webkit-transform: translateX(-25%);
            transform: translateX(-25%); /* 2 */
}

.Triangle--right {
    border-left-color: inherit;
    -webkit-transform: translateX(25%);
            transform: translateX(25%); /* 2 */
}

/* ==========================================================================
   Verical alignment utilities
   ========================================================================== */

/** @define utilities */

/**
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */

.u-alignBaseline {
    vertical-align: baseline !important;
}

.u-alignBottom {
    vertical-align: bottom !important;
}

.u-alignMiddle {
    vertical-align: middle !important;
}

.u-alignTop {
    vertical-align: top !important;
}

/* ==========================================================================
   Display utilities
   ========================================================================== */

/** @define utilities */

/**
 * Note: Since these utilities use `!important`, inline display styles
 * will have no effect.
 */

.u-hidden {
    display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    height: 1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
}

/**
 * Display-type utilities
 */

.u-block {
    display: block !important;
}

.u-hidden {
    display: none !important;
}

.u-inline {
    display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
    display: inline-block !important;
    max-width: 100%; /* 1 */
}

/**
 * Table
 */

.u-table {
    display: table !important;
}

.u-tableCell {
    display: table-cell !important;
}

.u-tableRow {
    display: table-row !important;
}

/* ==========================================================================
   Responsive display utilities
   ========================================================================== */

/* large */

@media (max-width: 800px) {

    .u-lg-show {
        display: block !important;
    }

    .u-lg-hide {
        display: none !important;
    }

}

/* medium */

@media (--c-bp-md) {

    .u-md-show {
        display: block !important;
    }

    .u-md-hide {
        display: none !important;
    }

}

/* small */

@media (--c-bp-sm) {

    .u-sm-show {
        display: block !important;
    }

    .u-sm-hide {
        display: none !important;
    }

}

/* ==========================================================================
   Flex utilities
   ========================================================================== */

/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.u-flex {
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important;
}

.u-flexInline {
    display: -webkit-inline-flex !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
}

/**
 * Direction: row
 */

.u-flexRow {
    -webkit-flex-direction: row !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
}

.u-flexRowReverse {
    -webkit-flex-direction: row-reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.u-flexCol {
    -webkit-flex-direction: column !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
}

.u-flexColReverse {
    -webkit-flex-direction: column-reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.u-flexWrap {
    -webkit-flex-wrap: wrap !important;
        -ms-flex-wrap: wrap !important;
            flex-wrap: wrap !important;
}

.u-flexNoWrap {
    -webkit-flex-wrap: nowrap !important;
        -ms-flex-wrap: nowrap !important;
            flex-wrap: nowrap !important;
}

.u-flexWrapReverse {
    -webkit-flex-wrap: wrap-reverse !important;
        -ms-flex-wrap: wrap-reverse !important;
            flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.u-flexJustifyStart {
    -webkit-justify-content: flex-start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
}

.u-flexJustifyEnd {
    -webkit-justify-content: flex-end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
}

.u-flexJustifyCenter {
    -webkit-justify-content: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
}

.u-flexJustifyBetween {
    -webkit-justify-content: space-between !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
}

.u-flexJustifyAround {
    -webkit-justify-content: space-around !important;
        -ms-flex-pack: distribute !important;
            justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.u-flexAlignItemsStart {
    -webkit-align-items: flex-start !important;
        -ms-flex-align: start !important;
                -ms-grid-row-align: flex-start !important;
            align-items: flex-start !important;
}

.u-flexAlignItemsEnd {
    -webkit-align-items: flex-end !important;
        -ms-flex-align: end !important;
                -ms-grid-row-align: flex-end !important;
            align-items: flex-end !important;
}

.u-flexAlignItemsCenter {
    -webkit-align-items: center !important;
        -ms-flex-align: center !important;
                -ms-grid-row-align: center !important;
            align-items: center !important;
}

.u-flexAlignItemsStretch {
    -webkit-align-items: stretch !important;
        -ms-flex-align: stretch !important;
                -ms-grid-row-align: stretch !important;
            align-items: stretch !important;
}

.u-flexAlignItemsBaseline {
    -webkit-align-items: baseline !important;
        -ms-flex-align: baseline !important;
                -ms-grid-row-align: baseline !important;
            align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra space in the
 * cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.u-flexAlignContentStart {
    -webkit-align-content: flex-start !important;
        -ms-flex-line-pack: start !important;
            align-content: flex-start !important;
}

.u-flexAlignContentEnd {
    -webkit-align-content: flex-end !important;
        -ms-flex-line-pack: end !important;
            align-content: flex-end !important;
}

.u-flexAlignContentCenter {
    -webkit-align-content: center !important;
        -ms-flex-line-pack: center !important;
            align-content: center !important;
}

.u-flexAlignContentStretch {
    -webkit-align-content: stretch !important;
        -ms-flex-line-pack: stretch !important;
            align-content: stretch !important;
}

.u-flexAlignContentBetween {
    -webkit-align-content: space-between !important;
        -ms-flex-line-pack: justify !important;
            align-content: space-between !important;
}

.u-flexAlignContentAround {
    -webkit-align-content: space-around !important;
        -ms-flex-line-pack: distribute !important;
            align-content: space-around !important;
}

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */

/* postcss-bem-linter: ignore */

.u-flex > *,
.u-flexInline > * {
    -webkit-flex-shrink: 1;
        -ms-flex-negative: 1;
            flex-shrink: 1; /* 1 */
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flexAlignSelfStart {
    -webkit-align-self: flex-start !important;
        -ms-flex-item-align: start !important;
            align-self: flex-start !important;
}

.u-flexAlignSelfEnd {
    -webkit-align-self: flex-end !important;
        -ms-flex-item-align: end !important;
            align-self: flex-end !important;
}

.u-flexAlignSelfCenter {
    -webkit-align-self: center !important;
        -ms-flex-item-align: center !important;
            align-self: center !important;
}

.u-flexAlignSelfStretch {
    -webkit-align-self: stretch !important;
        -ms-flex-item-align: stretch !important;
            align-self: stretch !important;
}

.u-flexAlignSelfBaseline {
    -webkit-align-self: baseline !important;
        -ms-flex-item-align: baseline !important;
            align-self: baseline !important;
}

.u-flexAlignSelfAuto {
    -webkit-align-self: auto !important;
        -ms-flex-item-align: auto !important;
            align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.u-flexOrderFirst {
    -webkit-order: -1 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
}

.u-flexOrderLast {
    -webkit-order: 1 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
}

.u-flexOrderNone {
    -webkit-order: 0 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

.u-flexGrow1 {
    -webkit-flex: 1 1 0% !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
}

.u-flexGrow2 {
    -webkit-flex: 2 1 0% !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
}

.u-flexGrow3 {
    -webkit-flex: 3 1 0% !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
}

.u-flexGrow4 {
    -webkit-flex: 4 1 0% !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
}

.u-flexGrow5 {
    -webkit-flex: 5 1 0% !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
}

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flexExpand {
    margin: auto !important;
}

.u-flexExpandLeft {
    margin-left: auto !important;
}

.u-flexExpandRight {
    margin-right: auto !important;
}

.u-flexExpandTop {
    margin-top: auto !important;
}

.u-flexExpandBottom {
    margin-bottom: auto !important;
}

/* ==========================================================================
   Image utilities
   ========================================================================== */

/** @define utilities */

/**
 * Make an image shrink to the width of it's containing element if the element
 * is smaller than the image's original width.
 */

.u-img {
    height: auto !important;
    max-width: 100% !important;
}

/**
 * Make an image scale to the width of it's containing element regardless of
 * the image's original width.
 */

.u-imgFull {
    display: block !important;
    height: auto !important;
    width: 100% !important;
}

/* ==========================================================================
   Layout utilities
   ========================================================================== */

/** @define utilities */

/**
 * Clearfix
 *
 * Applied to elements to allow their heights to 'clear' or contain floats.
 * http://nicolasgallagher.com/micro-clearfix-hack/
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf::before,
.u-cf::after {
    content: ' ' !important; /* 1 */
    display: table !important; /* 2 */
}

.u-cf::after {
    clear: both !important;
}

/**
 * Float positioning
 */

.u-floatLeft {
    float: left !important;
}

.u-floatRight {
    float: right !important;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.
 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
    overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
    display: table-cell !important; /* 1 */
    width: 10000px !important; /* 2 */
}

/* ==========================================================================
   Link utilities
   ========================================================================== */

/** @define utilities */

/**
 * Clean links
 * Reset all link styles
 */

.u-linkClean {
    color: inherit !important;
    text-decoration: none !important;
}

/**
 * Obvious links
 * Ensure the link has an underline in order to standout as an obvious link.
 */

.u-linkObvious {
    text-decoration: underline !important;
}

/**
 * Natural links
 * Link will inherit the text color of it's parent but will have an underline
 * to standout as an obvious link.
 */

.u-linkNatural {
    color: inherit !important;
    text-decoration: underline !important;
}

/**
 * Subtle links
 * Similar to a natural link but the underline is only shown on hover.
 */

.u-linkSubtle {
    color: inherit !important;
    text-decoration: none !important;
}

.u-linkSubtle:hover {
    text-decoration: underline !important;
}

/**
 * Link complex
 *
 * A common pattern is to have a link with several pieces of text and/or an
 * icon, where only one piece of text should display the underline when the
 * link is the subject of user interaction.
 *
 * Example HTML:
 *
 * <a class="u-linkComplex" href="#">
 *   Link complex
 *   <span class="u-linkComplexTarget">target</span>
 * </a>
 */

.u-linkComplex,
.u-linkComplex:hover,
.u-linkComplex:focus,
.u-linkComplex:active {
    text-decoration: none !important;
}

.u-linkComplex:hover .u-linkComplexTarget,
.u-linkComplex:focus .u-linkComplexTarget,
.u-linkComplex:active .u-linkComplexTarget {
    text-decoration: underline !important;
}

/* ==========================================================================
   Bottom margin utilities
   ========================================================================== */

/** @define utilities */

.u-margBottom0 {
    margin-bottom: 0 !important;
}

.u-margBottom1 {
    margin-bottom: 12px !important;
    margin-bottom: 1.2rem !important;
}

.u-margBottom2 {
    margin-bottom: 24px !important;
    margin-bottom: 2.4rem !important;
}

.u-margBottom3 {
    margin-bottom: 36px !important;
    margin-bottom: 3.6rem !important;
}

.u-margBottom4 {
    margin-bottom: 48px !important;
    margin-bottom: 4.8rem !important;
}

.u-margBottom5 {
    margin-bottom: 60px !important;
    margin-bottom: 6rem !important;
}

/* ==========================================================================
   Top margin utilities
   ========================================================================== */

/** @define utilities */

.u-margTop0 {
    margin-top: 0 !important;
}

.u-margTop1 {
    margin-top: 12px !important;
    margin-top: 1.2rem !important;
}

.u-margTop2 {
    margin-top: 24px !important;
    margin-top: 2.4rem !important;
}

.u-margTop3 {
    margin-top: 36px !important;
    margin-top: 3.6rem !important;
}

.u-margTop4 {
    margin-top: 48px !important;
    margin-top: 4.8rem !important;
}

.u-margTop5 {
    margin-top: 60px !important;
    margin-top: 6rem !important;
}

/**
 * General (multiple edge) padding utilities appear before more specific ones so
 * that the edge specific utilities will take precedence.
 */

/* ==========================================================================
   Gutter utilities
   ========================================================================== */

/** @define utilities */

/**
 * Add side gutters of various sizes
 */

.u-gutters0 {
    padding-left: 0 !important;
    padding-right: 0 !important;
}

.u-gutters1 {
    padding-left: 20px !important;
    padding-left: 2rem !important;
    padding-right: 20px !important;
    padding-right: 2rem !important;
}

.u-gutters2 {
    padding-left: 40px !important;
    padding-left: 4rem !important;
    padding-right: 40px !important;
    padding-right: 4rem !important;
}

.u-gutters3 {
    padding-left: 60px !important;
    padding-left: 6rem !important;
    padding-right: 60px !important;
    padding-right: 6rem !important;
}

.u-gutters4 {
    padding-left: 80px !important;
    padding-left: 8rem !important;
    padding-right: 80px !important;
    padding-right: 8rem !important;
}

/* ==========================================================================
   Vertical spacing utilities
   ========================================================================== */

/** @define utilities */

.u-spaced0 {
    padding-bottom: 0 !important;
    padding-top: 0 !important;
}

.u-spaced1 {
    padding-bottom: 6px !important;
    padding-bottom: 0.6rem !important;
    padding-top: 6px !important;
    padding-top: 0.6rem !important;
}

.u-spaced2 {
    padding-bottom: 12px !important;
    padding-bottom: 1.2rem !important;
    padding-top: 12px !important;
    padding-top: 1.2rem !important;
}

.u-spaced3 {
    padding-bottom: 18px !important;
    padding-bottom: 1.8rem !important;
    padding-top: 18px !important;
    padding-top: 1.8rem !important;
}

.u-spaced4 {
    padding-bottom: 24px !important;
    padding-bottom: 2.4rem !important;
    padding-top: 24px !important;
    padding-top: 2.4rem !important;
}

.u-spaced5 {
    padding-bottom: 30px !important;
    padding-bottom: 3rem !important;
    padding-top: 30px !important;
    padding-top: 3rem !important;
}

/* ==========================================================================
   Bottom padding utilities
   ========================================================================== */

/** @define utilities */

.u-padBottom0 {
    padding-bottom: 0 !important;
}

.u-padBottom1 {
    padding-bottom: 12px !important;
    padding-bottom: 1.2rem !important;
}

.u-padBottom2 {
    padding-bottom: 24px !important;
    padding-bottom: 2.4rem !important;
}

.u-padBottom3 {
    padding-bottom: 36px !important;
    padding-bottom: 3.6rem !important;
}

.u-padBottom4 {
    padding-bottom: 48px !important;
    padding-bottom: 4.8rem !important;
}

.u-padBottom5 {
    padding-bottom: 60px !important;
    padding-bottom: 6rem !important;
}

/* ==========================================================================
   Top padding utilities
   ========================================================================== */

/** @define utilities */

.u-padTop0 {
    padding-top: 0 !important;
}

.u-padTop1 {
    padding-top: 12px !important;
    padding-top: 1.2rem !important;
}

.u-padTop2 {
    padding-top: 24px !important;
    padding-top: 2.4rem !important;
}

.u-padTop3 {
    padding-top: 36px !important;
    padding-top: 3.6rem !important;
}

.u-padTop4 {
    padding-top: 48px !important;
    padding-top: 4.8rem !important;
}

.u-padTop5 {
    padding-top: 60px !important;
    padding-top: 6rem !important;
}

/* ==========================================================================
   Position utilities
   ========================================================================== */

/** @define utilities */

.u-posRelative {
    position: relative !important;
}

.u-posStatic {
    position: static !important;
}

.u-posAbsolute {
    position: absolute !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.u-posFixed {
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; /* 1 */
    position: fixed !important;
}

/* ==========================================================================
   Pull utilities
   ========================================================================== */

/** @define utilities */

/* postcss-bem-linter: ignore */

[class*='u-pull'] {
    position: relative !important;
}

.u-pull1of12 {
    left: -8.33333% !important;
}

.u-pull1of10 {
    left: -10% !important;
}

.u-pull1of8 {
    left: -12.5% !important;
}

.u-pull1of6,
.u-pull2of12 {
    left: -16.66667% !important;
}

.u-pull1of5,
.u-pull2of10 {
    left: -20% !important;
}

.u-pull1of4,
.u-pull2of8,
.u-pull3of12 {
    left: -25% !important;
}

.u-pull3of10 {
    left: -30% !important;
}

.u-pull1of3,
.u-pull2of6,
.u-pull4of12 {
    left: -33.33333% !important;
}

.u-pull3of8 {
    left: -37.5% !important;
}

.u-pull2of5,
.u-pull4of10 {
    left: -40% !important;
}

.u-pull5of12 {
    left: -41.66667% !important;
}

.u-pull1of2,
.u-pull2of4,
.u-pull3of6,
.u-pull4of8,
.u-pull5of10,
.u-pull6of12 {
    left: -50% !important;
}

.u-pull7of12 {
    left: -58.33333% !important;
}

.u-pull3of5,
.u-pull6of10 {
    left: -60% !important;
}

.u-pull5of8 {
    left: -62.5% !important;
}

.u-pull2of3,
.u-pull4of6,
.u-pull8of12 {
    left: -66.66667% !important;
}

.u-pull7of10 {
    left: -70% !important;
}

.u-pull3of4,
.u-pull6of8,
.u-pull9of12 {
    left: -75% !important;
}

.u-pull4of5,
.u-pull8of10 {
    left: -80% !important;
}

.u-pull5of6,
.u-pull10of12 {
    left: -83.33333% !important;
}

.u-pull7of8 {
    left: -87.5% !important;
}

.u-pull9of10 {
    left: -90% !important;
}

.u-pull11of12 {
    left: -91.66667% !important;
}

/* ==========================================================================
   Pull large
   ========================================================================== */

/** @define utilities */

@media (--c-bp-lg) {

    /* postcss-bem-linter: ignore */
    [class*='u-lg-pull'] {
        position: relative !important;
    }

    .u-lg-pullNone {
        left: 0 !important;
    }

    .u-lg-pull1of12 {
        left: -8.33333% !important;
    }

    .u-lg-pull1of10 {
        left: -10% !important;
    }

    .u-lg-pull1of8 {
        left: -12.5% !important;
    }

    .u-lg-pull1of6,
    .u-lg-pull2of12 {
        left: -16.66667% !important;
    }

    .u-lg-pull1of5,
    .u-lg-pull2of10 {
        left: -20% !important;
    }

    .u-lg-pull1of4,
    .u-lg-pull2of8,
    .u-lg-pull3of12 {
        left: -25% !important;
    }

    .u-lg-pull3of10 {
        left: -30% !important;
    }

    .u-lg-pull1of3,
    .u-lg-pull2of6,
    .u-lg-pull4of12 {
        left: -33.33333% !important;
    }

    .u-lg-pull3of8 {
        left: -37.5% !important;
    }

    .u-lg-pull2of5,
    .u-lg-pull4of10 {
        left: -40% !important;
    }

    .u-lg-pull5of12 {
        left: -41.66667% !important;
    }

    .u-lg-pull1of2,
    .u-lg-pull2of4,
    .u-lg-pull3of6,
    .u-lg-pull4of8,
    .u-lg-pull5of10,
    .u-lg-pull6of12 {
        left: -50% !important;
    }

    .u-lg-pull7of12 {
        left: -58.33333% !important;
    }

    .u-lg-pull3of5,
    .u-lg-pull6of10 {
        left: -60% !important;
    }

    .u-lg-pull5of8 {
        left: -62.5% !important;
    }

    .u-lg-pull2of3,
    .u-lg-pull4of6,
    .u-lg-pull8of12 {
        left: -66.66667% !important;
    }

    .u-lg-pull7of10 {
        left: -70% !important;
    }

    .u-lg-pull3of4,
    .u-lg-pull6of8,
    .u-lg-pull9of12 {
        left: -75% !important;
    }

    .u-lg-pull4of5,
    .u-lg-pull8of10 {
        left: -80% !important;
    }

    .u-lg-pull5of6,
    .u-lg-pull10of12 {
        left: -83.33333% !important;
    }

    .u-lg-pull7of8 {
        left: -87.5% !important;
    }

    .u-lg-pull9of10 {
        left: -90% !important;
    }

    .u-lg-pull11of12 {
        left: -91.66667% !important;
    }

}

/* ==========================================================================
   Pull medium
   ========================================================================== */

/** @define utilities */

@media (--c-bp-md) {

    /* postcss-bem-linter: ignore */
    [class*='u-md-pull'] {
        position: relative !important;
    }

    .u-md-pullNone {
        left: 0 !important;
    }

    .u-md-pull1of12 {
        left: -8.33333% !important;
    }

    .u-md-pull1of10 {
        left: -10% !important;
    }

    .u-md-pull1of8 {
        left: -12.5% !important;
    }

    .u-md-pull1of6,
    .u-md-pull2of12 {
        left: -16.66667% !important;
    }

    .u-md-pull1of5,
    .u-md-pull2of10 {
        left: -20% !important;
    }

    .u-md-pull1of4,
    .u-md-pull2of8,
    .u-md-pull3of12 {
        left: -25% !important;
    }

    .u-md-pull3of10 {
        left: -30% !important;
    }

    .u-md-pull1of3,
    .u-md-pull2of6,
    .u-md-pull4of12 {
        left: -33.33333% !important;
    }

    .u-md-pull3of8 {
        left: -37.5% !important;
    }

    .u-md-pull2of5,
    .u-md-pull4of10 {
        left: -40% !important;
    }

    .u-md-pull5of12 {
        left: -41.66667% !important;
    }

    .u-md-pull1of2,
    .u-md-pull2of4,
    .u-md-pull3of6,
    .u-md-pull4of8,
    .u-md-pull5of10,
    .u-md-pull6of12 {
        left: -50% !important;
    }

    .u-md-pull7of12 {
        left: -58.33333% !important;
    }

    .u-md-pull3of5,
    .u-md-pull6of10 {
        left: -60% !important;
    }

    .u-md-pull5of8 {
        left: -62.5% !important;
    }

    .u-md-pull2of3,
    .u-md-pull4of6,
    .u-md-pull8of12 {
        left: -66.66667% !important;
    }

    .u-md-pull7of10 {
        left: -70% !important;
    }

    .u-md-pull3of4,
    .u-md-pull6of8,
    .u-md-pull9of12 {
        left: -75% !important;
    }

    .u-md-pull4of5,
    .u-md-pull8of10 {
        left: -80% !important;
    }

    .u-md-pull5of6,
    .u-md-pull10of12 {
        left: -83.33333% !important;
    }

    .u-md-pull7of8 {
        left: -87.5% !important;
    }

    .u-md-pull9of10 {
        left: -90% !important;
    }

    .u-md-pull11of12 {
        left: -91.66667% !important;
    }

}

/* ==========================================================================
   Pull small
   ========================================================================== */

/** @define utilities */

@media (--c-bp-sm) {

    /* postcss-bem-linter: ignore */
    [class*='u-sm-pull'] {
        position: relative !important;
    }

    .u-sm-pullNone {
        left: 0 !important;
    }

    .u-sm-pull1of12 {
        left: -8.33333% !important;
    }

    .u-sm-pull1of10 {
        left: -10% !important;
    }

    .u-sm-pull1of8 {
        left: -12.5% !important;
    }

    .u-sm-pull1of6,
    .u-sm-pull2of12 {
        left: -16.66667% !important;
    }

    .u-sm-pull1of5,
    .u-sm-pull2of10 {
        left: -20% !important;
    }

    .u-sm-pull1of4,
    .u-sm-pull2of8,
    .u-sm-pull3of12 {
        left: -25% !important;
    }

    .u-sm-pull3of10 {
        left: -30% !important;
    }

    .u-sm-pull1of3,
    .u-sm-pull2of6,
    .u-sm-pull4of12 {
        left: -33.33333% !important;
    }

    .u-sm-pull3of8 {
        left: -37.5% !important;
    }

    .u-sm-pull2of5,
    .u-sm-pull4of10 {
        left: -40% !important;
    }

    .u-sm-pull5of12 {
        left: -41.66667% !important;
    }

    .u-sm-pull1of2,
    .u-sm-pull2of4,
    .u-sm-pull3of6,
    .u-sm-pull4of8,
    .u-sm-pull5of10,
    .u-sm-pull6of12 {
        left: -50% !important;
    }

    .u-sm-pull7of12 {
        left: -58.33333% !important;
    }

    .u-sm-pull3of5,
    .u-sm-pull6of10 {
        left: -60% !important;
    }

    .u-sm-pull5of8 {
        left: -62.5% !important;
    }

    .u-sm-pull2of3,
    .u-sm-pull4of6,
    .u-sm-pull8of12 {
        left: -66.66667% !important;
    }

    .u-sm-pull7of10 {
        left: -70% !important;
    }

    .u-sm-pull3of4,
    .u-sm-pull6of8,
    .u-sm-pull9of12 {
        left: -75% !important;
    }

    .u-sm-pull4of5,
    .u-sm-pull8of10 {
        left: -80% !important;
    }

    .u-sm-pull5of6,
    .u-sm-pull10of12 {
        left: -83.33333% !important;
    }

    .u-sm-pull7of8 {
        left: -87.5% !important;
    }

    .u-sm-pull9of10 {
        left: -90% !important;
    }

    .u-sm-pull11of12 {
        left: -91.66667% !important;
    }

}

/* ==========================================================================
   Push utilities
   ========================================================================== */

/** @define utilities */

/* postcss-bem-linter: ignore */

[class*='u-push'] {
    position: relative !important;
}

.u-push1of12 {
    left: 8.33333% !important;
}

.u-push1of10 {
    left: 10% !important;
}

.u-push1of8 {
    left: 12.5% !important;
}

.u-push1of6,
.u-push2of12 {
    left: 16.66667% !important;
}

.u-push1of5,
.u-push2of10 {
    left: 20% !important;
}

.u-push1of4,
.u-push2of8,
.u-push3of12 {
    left: 25% !important;
}

.u-push3of10 {
    left: 30% !important;
}

.u-push1of3,
.u-push2of6,
.u-push4of12 {
    left: 33.33333% !important;
}

.u-push3of8 {
    left: 37.5% !important;
}

.u-push2of5,
.u-push4of10 {
    left: 40% !important;
}

.u-push5of12 {
    left: 41.66667% !important;
}

.u-push1of2,
.u-push2of4,
.u-push3of6,
.u-push4of8,
.u-push5of10,
.u-push6of12 {
    left: 50% !important;
}

.u-push7of12 {
    left: 58.33333% !important;
}

.u-push3of5,
.u-push6of10 {
    left: 60% !important;
}

.u-push5of8 {
    left: 62.5% !important;
}

.u-push2of3,
.u-push4of6,
.u-push8of12 {
    left: 66.66667% !important;
}

.u-push7of10 {
    left: 70% !important;
}

.u-push3of4,
.u-push6of8,
.u-push9of12 {
    left: 75% !important;
}

.u-push4of5,
.u-push8of10 {
    left: 80% !important;
}

.u-push5of6,
.u-push10of12 {
    left: 83.33333% !important;
}

.u-push7of8 {
    left: 87.5% !important;
}

.u-push9of10 {
    left: 90% !important;
}

.u-push11of12 {
    left: 91.66667% !important;
}

/* ==========================================================================
   Push large
   ========================================================================== */

/** @define utilities */

@media (--c-bp-lg) {

    /* postcss-bem-linter: ignore */
    [class*='u-lg-push'] {
        position: relative !important;
    }

    .u-lg-pushNone {
        left: 0 !important;
    }

    .u-lg-push1of12 {
        left: 8.33333% !important;
    }

    .u-lg-push1of10 {
        left: 10% !important;
    }

    .u-lg-push1of8 {
        left: 12.5% !important;
    }

    .u-lg-push1of6,
    .u-lg-push2of12 {
        left: 16.66667% !important;
    }

    .u-lg-push1of5,
    .u-lg-push2of10 {
        left: 20% !important;
    }

    .u-lg-push1of4,
    .u-lg-push2of8,
    .u-lg-push3of12 {
        left: 25% !important;
    }

    .u-lg-push3of10 {
        left: 30% !important;
    }

    .u-lg-push1of3,
    .u-lg-push2of6,
    .u-lg-push4of12 {
        left: 33.33333% !important;
    }

    .u-lg-push3of8 {
        left: 37.5% !important;
    }

    .u-lg-push2of5,
    .u-lg-push4of10 {
        left: 40% !important;
    }

    .u-lg-push5of12 {
        left: 41.66667% !important;
    }

    .u-lg-push1of2,
    .u-lg-push2of4,
    .u-lg-push3of6,
    .u-lg-push4of8,
    .u-lg-push5of10,
    .u-lg-push6of12 {
        left: 50% !important;
    }

    .u-lg-push7of12 {
        left: 58.33333% !important;
    }

    .u-lg-push3of5,
    .u-lg-push6of10 {
        left: 60% !important;
    }

    .u-lg-push5of8 {
        left: 62.5% !important;
    }

    .u-lg-push2of3,
    .u-lg-push4of6,
    .u-lg-push8of12 {
        left: 66.66667% !important;
    }

    .u-lg-push7of10 {
        left: 70% !important;
    }

    .u-lg-push3of4,
    .u-lg-push6of8,
    .u-lg-push9of12 {
        left: 75% !important;
    }

    .u-lg-push4of5,
    .u-lg-push8of10 {
        left: 80% !important;
    }

    .u-lg-push5of6,
    .u-lg-push10of12 {
        left: 83.33333% !important;
    }

    .u-lg-push7of8 {
        left: 87.5% !important;
    }

    .u-lg-push9of10 {
        left: 90% !important;
    }

    .u-lg-push11of12 {
        left: 91.66667% !important;
    }

}

/* ==========================================================================
   Push medium
   ========================================================================== */

/** @define utilities */

@media (--c-bp-md) {

    /* postcss-bem-linter: ignore */
    [class*='u-md-push'] {
        position: relative !important;
    }

    .u-md-pushNone {
        left: 0 !important;
    }

    .u-md-push1of12 {
        left: 8.33333% !important;
    }

    .u-md-push1of10 {
        left: 10% !important;
    }

    .u-md-push1of8 {
        left: 12.5% !important;
    }

    .u-md-push1of6,
    .u-md-push2of12 {
        left: 16.66667% !important;
    }

    .u-md-push1of5,
    .u-md-push2of10 {
        left: 20% !important;
    }

    .u-md-push1of4,
    .u-md-push2of8,
    .u-md-push3of12 {
        left: 25% !important;
    }

    .u-md-push3of10 {
        left: 30% !important;
    }

    .u-md-push1of3,
    .u-md-push2of6,
    .u-md-push4of12 {
        left: 33.33333% !important;
    }

    .u-md-push3of8 {
        left: 37.5% !important;
    }

    .u-md-push2of5,
    .u-md-push4of10 {
        left: 40% !important;
    }

    .u-md-push5of12 {
        left: 41.66667% !important;
    }

    .u-md-push1of2,
    .u-md-push2of4,
    .u-md-push3of6,
    .u-md-push4of8,
    .u-md-push5of10,
    .u-md-push6of12 {
        left: 50% !important;
    }

    .u-md-push7of12 {
        left: 58.33333% !important;
    }

    .u-md-push3of5,
    .u-md-push6of10 {
        left: 60% !important;
    }

    .u-md-push5of8 {
        left: 62.5% !important;
    }

    .u-md-push2of3,
    .u-md-push4of6,
    .u-md-push8of12 {
        left: 66.66667% !important;
    }

    .u-md-push7of10 {
        left: 70% !important;
    }

    .u-md-push3of4,
    .u-md-push6of8,
    .u-md-push9of12 {
        left: 75% !important;
    }

    .u-md-push4of5,
    .u-md-push8of10 {
        left: 80% !important;
    }

    .u-md-push5of6,
    .u-md-push10of12 {
        left: 83.33333% !important;
    }

    .u-md-push7of8 {
        left: 87.5% !important;
    }

    .u-md-push9of10 {
        left: 90% !important;
    }

    .u-md-push11of12 {
        left: 91.66667% !important;
    }

}

/* ==========================================================================
   Push small
   ========================================================================== */

/** @define utilities */

@media (--c-bp-sm) {

    /* postcss-bem-linter: ignore */
    [class*='u-sm-push'] {
        position: relative !important;
    }

    .u-sm-pushNone {
        left: 0 !important;
    }

    .u-sm-push1of12 {
        left: 8.33333% !important;
    }

    .u-sm-push1of10 {
        left: 10% !important;
    }

    .u-sm-push1of8 {
        left: 12.5% !important;
    }

    .u-sm-push1of6,
    .u-sm-push2of12 {
        left: 16.66667% !important;
    }

    .u-sm-push1of5,
    .u-sm-push2of10 {
        left: 20% !important;
    }

    .u-sm-push1of4,
    .u-sm-push2of8,
    .u-sm-push3of12 {
        left: 25% !important;
    }

    .u-sm-push3of10 {
        left: 30% !important;
    }

    .u-sm-push1of3,
    .u-sm-push2of6,
    .u-sm-push4of12 {
        left: 33.33333% !important;
    }

    .u-sm-push3of8 {
        left: 37.5% !important;
    }

    .u-sm-push2of5,
    .u-sm-push4of10 {
        left: 40% !important;
    }

    .u-sm-push5of12 {
        left: 41.66667% !important;
    }

    .u-sm-push1of2,
    .u-sm-push2of4,
    .u-sm-push3of6,
    .u-sm-push4of8,
    .u-sm-push5of10,
    .u-sm-push6of12 {
        left: 50% !important;
    }

    .u-sm-push7of12 {
        left: 58.33333% !important;
    }

    .u-sm-push3of5,
    .u-sm-push6of10 {
        left: 60% !important;
    }

    .u-sm-push5of8 {
        left: 62.5% !important;
    }

    .u-sm-push2of3,
    .u-sm-push4of6,
    .u-sm-push8of12 {
        left: 66.66667% !important;
    }

    .u-sm-push7of10 {
        left: 70% !important;
    }

    .u-sm-push3of4,
    .u-sm-push6of8,
    .u-sm-push9of12 {
        left: 75% !important;
    }

    .u-sm-push4of5,
    .u-sm-push8of10 {
        left: 80% !important;
    }

    .u-sm-push5of6,
    .u-sm-push10of12 {
        left: 83.33333% !important;
    }

    .u-sm-push7of8 {
        left: 87.5% !important;
    }

    .u-sm-push9of10 {
        left: 90% !important;
    }

    .u-sm-push11of12 {
        left: 91.66667% !important;
    }

}

/* ==========================================================================
   Border radius utilities
   ========================================================================== */

/** @define utilities */

.u-radius1 {
    border-radius: .6rem !important;
}

.u-radius2 {
    border-radius: 1.8rem !important;
}

.u-radius3 {
    border-radius: 2.4rem !important;
}

.u-radius4 {
    border-radius: 3rem !important;
}

.u-radius5 {
    border-radius: 3.6rem !important;
}

/**
 * Smooth border radius so that element will resember a circle or oval
 * depending on dimensions.
 */

.u-radiusCircular {
    border-radius: 50% !important;
}

/* ==========================================================================
   Size utilities
   ========================================================================== */

/** @define utilities */

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */

/* postcss-bem-linter: ignore */

[class*='u-size'] {
    -webkit-flex-basis: auto !important;
        -ms-flex-preferred-size: auto !important;
            flex-basis: auto !important; /* 1 */
}

.u-size1of12 {
    width: 8.33333% !important;
}

.u-size1of10 {
    width: 10% !important;
}

.u-size1of8 {
    width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
    width: 16.66667% !important;
}

.u-size1of5,
.u-size2of10 {
    width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
    width: 25% !important;
}

.u-size3of10 {
    width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
    width: 33.33333% !important;
}

.u-size3of8 {
    width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
    width: 40% !important;
}

.u-size5of12 {
    width: 41.66667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
    width: 50% !important;
}

.u-size7of12 {
    width: 58.33333% !important;
}

.u-size3of5,
.u-size6of10 {
    width: 60% !important;
}

.u-size5of8 {
    width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
    width: 66.66667% !important;
}

.u-size7of10 {
    width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
    width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
    width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
    width: 83.33333% !important;
}

.u-size7of8 {
    width: 87.5% !important;
}

.u-size9of10 {
    width: 90% !important;
}

.u-size11of12 {
    width: 91.66667% !important;
}

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
 */

.u-sizeFill {
    -webkit-flex: 1 1 0% !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -webkit-flex-basis: 0% !important;
        -ms-flex-preferred-size: 0% !important;
            flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.u-sizeFillAlt {
    -webkit-flex: 1 1 auto !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -webkit-flex-basis: auto !important;
        -ms-flex-preferred-size: auto !important;
            flex-basis: auto !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
}

/* ==========================================================================
   Size large
   ========================================================================== */

/** @define utilities */

@media (--c-bp-lg) {

    /* Proportional widths
     ======================================================================== */

    /**
     * Specify the proportional width of an object.
     * Intentional redundancy build into each set of unit classes.
     * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
     *
     * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
     *    http://git.io/vllMD
     */

    /* postcss-bem-linter: ignore */
    [class*='u-lg-size'] {
        -webkit-flex-basis: auto !important;
            -ms-flex-preferred-size: auto !important;
                flex-basis: auto !important; /* 1 */
    }

    .u-lg-size1of12 {
        width: 8.33333% !important;
    }

    .u-lg-size1of10 {
        width: 10% !important;
    }

    .u-lg-size1of8 {
        width: 12.5% !important;
    }

    .u-lg-size1of6,
    .u-lg-size2of12 {
        width: 16.66667% !important;
    }

    .u-lg-size1of5,
    .u-lg-size2of10 {
        width: 20% !important;
    }

    .u-lg-size1of4,
    .u-lg-size2of8,
    .u-lg-size3of12 {
        width: 25% !important;
    }

    .u-lg-size3of10 {
        width: 30% !important;
    }

    .u-lg-size1of3,
    .u-lg-size2of6,
    .u-lg-size4of12 {
        width: 33.33333% !important;
    }

    .u-lg-size3of8 {
        width: 37.5% !important;
    }

    .u-lg-size2of5,
    .u-lg-size4of10 {
        width: 40% !important;
    }

    .u-lg-size5of12 {
        width: 41.66667% !important;
    }

    .u-lg-size1of2,
    .u-lg-size2of4,
    .u-lg-size3of6,
    .u-lg-size4of8,
    .u-lg-size5of10,
    .u-lg-size6of12 {
        width: 50% !important;
    }

    .u-lg-size7of12 {
        width: 58.33333% !important;
    }

    .u-lg-size3of5,
    .u-lg-size6of10 {
        width: 60% !important;
    }

    .u-lg-size5of8 {
        width: 62.5% !important;
    }

    .u-lg-size2of3,
    .u-lg-size4of6,
    .u-lg-size8of12 {
        width: 66.66667% !important;
    }

    .u-lg-size7of10 {
        width: 70% !important;
    }

    .u-lg-size3of4,
    .u-lg-size6of8,
    .u-lg-size9of12 {
        width: 75% !important;
    }

    .u-lg-size4of5,
    .u-lg-size8of10 {
        width: 80% !important;
    }

    .u-lg-size5of6,
    .u-lg-size10of12 {
        width: 83.33333% !important;
    }

    .u-lg-size7of8 {
        width: 87.5% !important;
    }

    .u-lg-size9of10 {
        width: 90% !important;
    }

    .u-lg-size11of12 {
        width: 91.66667% !important;
    }

    /* Intrinsic widths
     ======================================================================== */

    /**
     * Make an element fill the remaining space.
     *
     * 1. Be explicit to work around IE10 bug with shorthand flex
     *    http://git.io/vllC7
     * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
     *    http://git.io/vllMt
     */

    .u-lg-sizeFill {
        -webkit-flex: 1 1 0% !important;
            -ms-flex: 1 1 0% !important;
                flex: 1 1 0% !important; /* 1 */
        -webkit-flex-basis: 0% !important;
            -ms-flex-preferred-size: 0% !important;
                flex-basis: 0% !important; /* 2 */
    }

    /**
     * An alternative method to make an element fill the remaining space.
     * Distributes space based on the initial width and height of the element
     *
     * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
     */

    .u-lg-sizeFillAlt {
        -webkit-flex: 1 1 auto !important;
            -ms-flex: 1 1 auto !important;
                flex: 1 1 auto !important;
        -webkit-flex-basis: auto !important;
            -ms-flex-preferred-size: auto !important;
                flex-basis: auto !important;
    }

    /**
     * Make an element the width of its parent.
     */

    .u-lg-sizeFull {
        box-sizing: border-box !important;
        display: block !important;
        width: 100% !important;
    }

}

/* ==========================================================================
   Size medium
   ========================================================================== */

/** @define utilities */

@media (--c-bp-md) {

    /* Proportional widths
     ======================================================================== */

    /**
     * Specify the proportional width of an object.
     * Intentional redundancy build into each set of unit classes.
     * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
     *
     * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
     *    http://git.io/vllMD
     */

    /* postcss-bem-linter: ignore */
    [class*='u-md-size'] {
        -webkit-flex-basis: auto !important;
            -ms-flex-preferred-size: auto !important;
                flex-basis: auto !important; /* 1 */
    }

    .u-md-size1of12 {
        width: 8.33333% !important;
    }

    .u-md-size1of10 {
        width: 10% !important;
    }

    .u-md-size1of8 {
        width: 12.5% !important;
    }

    .u-md-size1of6,
    .u-md-size2of12 {
        width: 16.66667% !important;
    }

    .u-md-size1of5,
    .u-md-size2of10 {
        width: 20% !important;
    }

    .u-md-size1of4,
    .u-md-size2of8,
    .u-md-size3of12 {
        width: 25% !important;
    }

    .u-md-size3of10 {
        width: 30% !important;
    }

    .u-md-size1of3,
    .u-md-size2of6,
    .u-md-size4of12 {
        width: 33.33333% !important;
    }

    .u-md-size3of8 {
        width: 37.5% !important;
    }

    .u-md-size2of5,
    .u-md-size4of10 {
        width: 40% !important;
    }

    .u-md-size5of12 {
        width: 41.66667% !important;
    }

    .u-md-size1of2,
    .u-md-size2of4,
    .u-md-size3of6,
    .u-md-size4of8,
    .u-md-size5of10,
    .u-md-size6of12 {
        width: 50% !important;
    }

    .u-md-size7of12 {
        width: 58.33333% !important;
    }

    .u-md-size3of5,
    .u-md-size6of10 {
        width: 60% !important;
    }

    .u-md-size5of8 {
        width: 62.5% !important;
    }

    .u-md-size2of3,
    .u-md-size4of6,
    .u-md-size8of12 {
        width: 66.66667% !important;
    }

    .u-md-size7of10 {
        width: 70% !important;
    }

    .u-md-size3of4,
    .u-md-size6of8,
    .u-md-size9of12 {
        width: 75% !important;
    }

    .u-md-size4of5,
    .u-md-size8of10 {
        width: 80% !important;
    }

    .u-md-size5of6,
    .u-md-size10of12 {
        width: 83.33333% !important;
    }

    .u-md-size7of8 {
        width: 87.5% !important;
    }

    .u-md-size9of10 {
        width: 90% !important;
    }

    .u-md-size11of12 {
        width: 91.66667% !important;
    }

    /* Intrinsic widths
     ======================================================================== */

    /**
     * Make an element fill the remaining space.
     *
     * 1. Be explicit to work around IE10 bug with shorthand flex
     *    http://git.io/vllC7
     * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
     *    http://git.io/vllMt
     */

    .u-md-sizeFill {
        -webkit-flex: 1 1 0% !important;
            -ms-flex: 1 1 0% !important;
                flex: 1 1 0% !important; /* 1 */
        -webkit-flex-basis: 0% !important;
            -ms-flex-preferred-size: 0% !important;
                flex-basis: 0% !important; /* 2 */
    }

    /**
     * An alternative method to make an element fill the remaining space.
     * Distributes space based on the initial width and height of the element
     *
     * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
     */

    .u-md-sizeFillAlt {
        -webkit-flex: 1 1 auto !important;
            -ms-flex: 1 1 auto !important;
                flex: 1 1 auto !important;
        -webkit-flex-basis: auto !important;
            -ms-flex-preferred-size: auto !important;
                flex-basis: auto !important;
    }

    /**
     * Make an element the width of its parent.
     */

    .u-md-sizeFull {
        box-sizing: border-box !important;
        display: block !important;
        width: 100% !important;
    }

}

/* ==========================================================================
   Size small
   ========================================================================== */

/** @define utilities */

@media (--c-bp-sm) {

    /* Proportional widths
     ======================================================================== */

    /**
     * Specify the proportional width of an object.
     * Intentional redundancy build into each set of unit classes.
     * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
     *
     * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
     *    http://git.io/vllMD
     */

    /* postcss-bem-linter: ignore */
    [class*='u-sm-size'] {
        -webkit-flex-basis: auto !important;
            -ms-flex-preferred-size: auto !important;
                flex-basis: auto !important; /* 1 */
    }

    .u-sm-size1of12 {
        width: 8.33333% !important;
    }

    .u-sm-size1of10 {
        width: 10% !important;
    }

    .u-sm-size1of8 {
        width: 12.5% !important;
    }

    .u-sm-size1of6,
    .u-sm-size2of12 {
        width: 16.66667% !important;
    }

    .u-sm-size1of5,
    .u-sm-size2of10 {
        width: 20% !important;
    }

    .u-sm-size1of4,
    .u-sm-size2of8,
    .u-sm-size3of12 {
        width: 25% !important;
    }

    .u-sm-size3of10 {
        width: 30% !important;
    }

    .u-sm-size1of3,
    .u-sm-size2of6,
    .u-sm-size4of12 {
        width: 33.33333% !important;
    }

    .u-sm-size3of8 {
        width: 37.5% !important;
    }

    .u-sm-size2of5,
    .u-sm-size4of10 {
        width: 40% !important;
    }

    .u-sm-size5of12 {
        width: 41.66667% !important;
    }

    .u-sm-size1of2,
    .u-sm-size2of4,
    .u-sm-size3of6,
    .u-sm-size4of8,
    .u-sm-size5of10,
    .u-sm-size6of12 {
        width: 50% !important;
    }

    .u-sm-size7of12 {
        width: 58.33333% !important;
    }

    .u-sm-size3of5,
    .u-sm-size6of10 {
        width: 60% !important;
    }

    .u-sm-size5of8 {
        width: 62.5% !important;
    }

    .u-sm-size2of3,
    .u-sm-size4of6,
    .u-sm-size8of12 {
        width: 66.66667% !important;
    }

    .u-sm-size7of10 {
        width: 70% !important;
    }

    .u-sm-size3of4,
    .u-sm-size6of8,
    .u-sm-size9of12 {
        width: 75% !important;
    }

    .u-sm-size4of5,
    .u-sm-size8of10 {
        width: 80% !important;
    }

    .u-sm-size5of6,
    .u-sm-size10of12 {
        width: 83.33333% !important;
    }

    .u-sm-size7of8 {
        width: 87.5% !important;
    }

    .u-sm-size9of10 {
        width: 90% !important;
    }

    .u-sm-size11of12 {
        width: 91.66667% !important;
    }

    /* Intrinsic widths
     ======================================================================== */

    /**
     * Make an element fill the remaining space.
     *
     * 1. Be explicit to work around IE10 bug with shorthand flex
     *    http://git.io/vllC7
     * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
     *    http://git.io/vllMt
     */

    .u-sm-sizeFill {
        -webkit-flex: 1 1 0% !important;
            -ms-flex: 1 1 0% !important;
                flex: 1 1 0% !important; /* 1 */
        -webkit-flex-basis: 0% !important;
            -ms-flex-preferred-size: 0% !important;
                flex-basis: 0% !important; /* 2 */
    }

    /**
     * An alternative method to make an element fill the remaining space.
     * Distributes space based on the initial width and height of the element
     *
     * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
     */

    .u-sm-sizeFillAlt {
        -webkit-flex: 1 1 auto !important;
            -ms-flex: 1 1 auto !important;
                flex: 1 1 auto !important;
        -webkit-flex-basis: auto !important;
            -ms-flex-preferred-size: auto !important;
                flex-basis: auto !important;
    }

    /**
     * Make an element the width of its parent.
     */

    .u-sm-sizeFull {
        box-sizing: border-box !important;
        display: block !important;
        width: 100% !important;
    }

}

/* ==========================================================================
   Typography utilities
   ========================================================================== */

/** @define utilities */

/* Transforms
   ========================================================================== */

.u-textUpper {
    text-transform: uppercase !important;
}

.u-textNoTransform {
    text-transform: none !important;
}

/* Style
   ========================================================================== */

.u-styleNone {
    font-style: unset !important;
}

.u-styleEm {
    font-style: italic !important;
}

/* Horizontal Alignment
   ========================================================================== */

.u-textLeft {
    text-align: left !important;
}

.u-textRight {
    text-align: right !important;
}

.u-textCenter {
    text-align: center !important;
}

/* Weight
   ========================================================================== */

.u-weightNormal {
    font-weight: 400 !important;
}

.u-weightLight {
    font-weight: 300 !important;
}

.u-weightBold {
    font-weight: 700 !important;
}

.u-weightLighter {
    font-weight: lighter !important;
}

.u-weightBolder {
    font-weight: bolder !important;
}

.u-weightLightest {
    font-weight: 100 !important;
}

.u-weightBoldest {
    font-weight: 900 !important;
}

/* Font Scale
   ========================================================================== */

.u-fontSize1 {
    font-size: 12px !important;
    font-size: 1.2rem !important;
    line-height: 12px !important;
    line-height: 1.2rem !important;
}

.u-fontSize2 {
    font-size: 14px !important;
    font-size: 1.4rem !important;
    line-height: 24px !important;
    line-height: 2.4rem !important;
}

.u-fontSize3 {
    font-size: 16px !important;
    font-size: 1.6rem !important;
    line-height: 24px !important;
    line-height: 2.4rem !important;
}

.u-fontSize4 {
    font-size: 20px !important;
    font-size: 2rem !important;
    line-height: 24px !important;
    line-height: 2.4rem !important;
}

.u-fontSize5 {
    font-size: 24px !important;
    font-size: 2.4rem !important;
    line-height: 36px !important;
    line-height: 3.6rem !important;
}

.u-fontSize6 {
    font-size: 28px !important;
    font-size: 2.8rem !important;
    line-height: 36px !important;
    line-height: 3.6rem !important;
}

.u-fontSize7 {
    font-size: 32px !important;
    font-size: 3.2rem !important;
    line-height: 36px !important;
    line-height: 3.6rem !important;
}

.u-fontSize8 {
    font-size: 48px !important;
    font-size: 4.8rem !important;
    line-height: 60px !important;
    line-height: 6rem !important;
}

.u-fontSize9 {
    font-size: 52px !important;
    font-size: 5.2rem !important;
    line-height: 60px !important;
    line-height: 6rem !important;
}

.u-fontSize10 {
    font-size: 58px !important;
    font-size: 5.8rem !important;
    line-height: 60px !important;
    line-height: 6rem !important;
}

/* Misc
   ========================================================================== */

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
    color: inherit !important;
}

/**
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
    word-wrap: break-word !important;
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
    white-space: nowrap !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */

.u-textKern {
    -webkit-font-feature-settings: 'kern' 1;
            font-feature-settings: 'kern' 1; /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal; /* 3 */
    text-rendering: optimizeLegibility; /* 1 */
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
    max-width: 100%; /* 1 */
    overflow: hidden !important;
    text-overflow: ellipsis !important;
    white-space: nowrap !important;
    word-wrap: normal !important; /* 2 */
}

/* ==========================================================================
   Test
   ========================================================================== */

/**
 * Styles used on visual test pages
 * Namespaced to avoid collisions with the styles in the rest of the kit.
 */

/* Test
   ========================================================================== */

/**
 * Test page container
 */

.t-Test {
    counter-reset: test-describe;
    margin: 0 auto;
    max-width: 960px;
    padding: 0 10px;
}

/**
 * Test page title
 */

.t-Test-title {
    font-size: 32px;
    font-family: sans-serif;
    font-weight: bold;
    line-height: initial;
    padding: 20px;
    margin: 20px 0;
    background: #eee;
    color: #999;
}

.t-Test-title > a {
    color: initial;
    text-decoration: underline;
}

/**
 * Test subjects, assertions, and lists
 */

.t-Test-list,
.t-Test-describe,
.t-Test-assert {
    background: #eee;
    border-left: 5px solid #666;
    color: #666;
    font-family: sans-serif;
    font-weight: bold;
    line-height: initial;
    margin: 20px 0;
    padding: .75em 20px;
}

.t-Test-list > li::before,
.t-Test-describe::before,
.t-Test-assert::before {
    color: #999;
    display: inline-block;
    margin-right: 10px;
    min-width: 30px;
    text-transform: uppercase;
}

.t-Test-describe {
    counter-reset: test-assert;
    font-size: 24px;
    margin: 60px 0 20px;
}

.t-Test-describe::before {
    content: counter(test-describe, decimal);
    counter-increment: test-describe;
}

.t-Test-list,
.t-Test-assert {
    font-size: 18px;
}

.t-Test-assert::before {
    content: counter(test-describe, decimal) "." counter(test-assert, decimal);
    counter-increment: test-assert;
}

.t-Test-list {
    line-height: 1.3;
    list-style: none;
}

.t-Test-list > li::before {
    content: '●';
    display: inline;
    min-width: 0;
}

/**
 * Test output
 */

.t-Test-run {
    margin-bottom: 20px;
}

/* clear floats */

.t-Test-run::before,
.t-Test-run::after {
    content: ' ';
    display: table;
}

.t-Test-run::after {
    clear: both;
}

/* Fixture
   ========================================================================== */

.t-Fixture {
    background: #90c3d4;
    border: 1px solid #000;
    font: initial;
    margin-bottom: 10px;
    padding: 10px;
}

/**
 * Common config variables
 *
 * These will be mapped to component configurations, components should
 * not use these directly.
 */

/* Breakpoints
   ========================================================================== */

/* Layout
   ========================================================================== */

/* Colors
   ========================================================================== */

/**
 * Each generic color has an alt fg/bg color for text legibility.
 */

/* base properties */

/* Typography
   ========================================================================== */

/**
 * Font scale
 */

:root { /* body, h6 */ /* h5 */ /* h4 */ /* h3 */ /* h2 */ /* h1 */
}

/* corresponding line-heights */

:root { /* body, h6 */ /* h5 */ /* h4 */ /* h3 */ /* h2 */ /* h1 */
}

/**
 * Font families
 */

/**
 * Body font properties
 */

/**
 * Heading font properties
 */

/**
 * Code font properties
 */

/**
 * Configure modules
 *
 * This configuration layer keeps modules decoupled from the set of
 * variables used to configure them.
 *
 * https://github.com/suitcss/theme/
 */

/* Base
   ========================================================================== */

/* Button
   ========================================================================== */

/* Container
   ========================================================================== */

/* Grid
   ========================================================================== */

/* Image
   ========================================================================== */

/* List
   ========================================================================== */

/* Media
   ========================================================================== */

/* Utilities
   ========================================================================== */
