/*---------------------------------------------------------------------------*\
  GLOBAL MIXINS
\*---------------------------------------------------------------------------*/

/* http://stackoverflow.com/questions/12228548/findinq-equivalent-color-with-opacity */
@mixin bg_alpha_calc ($desired_colour, $desired_alpha, $background_colour: white) {
    $r3: red($desired_colour);
    $g3: green($desired_colour);
    $b3: blue($desired_colour);

    $r2: red($background_colour);
    $g2: green($background_colour);
    $b2: blue($background_colour);

    // x1 = (x3 - x2 + x2 * a1) / a1
    $r1: ( $r3 - $r2 + ($r2 * $desired_alpha) ) / $desired_alpha;
    $g1: ( $g3 - $g2 + ($g2 * $desired_alpha) ) / $desired_alpha;
    $b1: ( $b3 - $b2 + ($b2 * $desired_alpha) ) / $desired_alpha;

    background-color: $desired_colour;
    background-color: rgba($r1, $g1, $b1, $desired_alpha);

}

@mixin clearfix {
    &:before, &:after { content: " "; display: table; }
    &:after { clear: both; }
}


@mixin box-sizing($type:border-box) {
    -webkit-box-sizing: $type; // Android < 2.3, iOS < 4
    -moz-box-sizing: $type; // Firefox < 29
    box-sizing: $type; // Chrome, IE 8+, Opera, Safari 5.1
}


@mixin user-select($select: text) {
    -webkit-touch-callout: $select;
    -webkit-user-select: $select;
    -khtml-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
    user-select: $select;
}


@mixin greyscale($value: on) {
    @if $value == on {
        /* Current draft standard */
        filter: grayscale(100%);
        /* New WebKit */
        -webkit-filter: grayscale(100%);
        -moz-filter: grayscale(100%);
        -ms-filter: grayscale(100%);
        /* Not yet supported in Gecko, Opera or IE */
        -o-filter: grayscale(100%);
        /* Firefox 3.5+ */
        filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");
        /* IE 6-9 */
        filter: gray;
        /* Old WebKit */
        -webkit-filter: grayscale(1);
    }
    @else {
        -webkit-filter: none;
        -moz-filter: none;
        -ms-filter: none;
        -o-filter: none;
        filter: none;
    }
}


@mixin placeholder($color) {
    &::-moz-placeholder           { color: $color;   // Firefox
        opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526
    &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
    &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}


@mixin font-smoothing($value: on) {
    @if $value == on {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    @else {
        -webkit-font-smoothing: none;
        -moz-osx-font-smoothing: none;
        font-smooth: never;
    }
}


@mixin linear-gradient($fromColor, $toColor) {
    background-color: $toColor; /* Fallback Color */
    background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
    background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
    background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
    background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
    background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
    background-image:         linear-gradient(top, $fromColor, $toColor);
    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}


@mixin box-shadow($top, $left, $blur, $spread, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $spread $color;
           -moz-box-shadow:inset $top $left $blur $spread $color;
                box-shadow:inset $top $left $blur $spread $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $spread $color;
           -moz-box-shadow: $top $left $blur $spread $color;
                box-shadow: $top $left $blur $spread $color;
    }
}


@mixin rounded($radius: 0.5em) {
    -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
            border-radius: $radius;
}


@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}


@mixin letterpress($opacity){
    text-shadow:white($opacity) 0 1px 0;
}


@mixin box-emboss($opacity, $opacity2){
    box-shadow:white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}


@mixin triangle($triangle-size, $triangle-color, $triangle-direction) {
    content: "";
    display: inline-block;
    width: 0;
    height: 0;
    border-width: $triangle-size;
    border-style: solid;

    @if ($triangle-direction == up) {
        border-color: transparent transparent $triangle-color transparent;
    }
    @if ($triangle-direction == down) {
        border-color: transparent $triangle-color transparent transparent;
        border-bottom-style: solid;
    }
    @if ($triangle-direction == left) {
        border-color: transparent $triangle-color transparent transparent ;
    }
    @if ($triangle-direction == right) {
        border-color: transparent transparent transparent $triangle-color;
    }
}


@mixin hamburger($width, $left, $top, $thickness, $gap, $color, $hover-color, $offcanvas) {
    span:after {
        content: '';
        position: absolute;
        display: block;
        height: 0;

        @if $offcanvas {
            @if $top {
                top: $top;
            }
            @else {
                top: 50%;
                margin-top: -$width/2;
            }
            @if $left {
                left: $left;
            }
            @else {
                left: ($tabbar-menu-icon-width - $width)/2;
            }
        }

        box-shadow:
        0 0px 0 $thickness $color,
        0 $gap + $thickness 0 $thickness $color,
        0 (2 * $gap + 2*$thickness) 0 $thickness $color;
        width: $width;
    }
    span:hover:after {
        box-shadow:
        0 0px 0 $thickness $hover-color,
        0 $gap + $thickness 0 $thickness $hover-color,
        0 (2 * $gap + 2*$thickness) 0 $thickness $hover-color;
    }
}


@mixin transition($property: all, $duration: 100ms, $function: linear, $delay: 0s) {
    -webkit-transition: $property $duration $function $delay;
    -moz-transition: $property $duration $function $delay;
    -o-transition: $property $duration $function $delay;
    transition: $property $duration $function $delay;
}
