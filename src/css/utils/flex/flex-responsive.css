/* ==========================================================================
    Responsive flex utilities
   ========================================================================== */

/* ------------------------------------ *\
    Small
\* ------------------------------------ */

@media (--c-bp-sm) {

    /**
    * Container
    */

    .u-sm-flex {
        display: flex !important;
    }

    .u-sm-flexInline {
        display: inline-flex !important;
    }

    /**
    * Direction: row
    */

    .u-sm-flexRow {
        flex-direction: row !important;
    }

    .u-sm-flexRowReverse {
        flex-direction: row-reverse !important;
    }

    /**
    * Direction: column
    */

    .u-sm-flexCol {
        flex-direction: column !important;
    }

    .u-sm-flexColReverse {
        flex-direction: column-reverse !important;
    }

    /**
    * Wrap
    */

    .u-sm-flexWrap {
        flex-wrap: wrap !important;
    }

    .u-sm-flexNoWrap {
        flex-wrap: nowrap !important;
    }

    .u-sm-flexWrapReverse {
        flex-wrap: wrap-reverse !important;
    }

    /**
    * Align items along the main axis of the current line of the flex container
    */

    .u-sm-flexJustifyStart {
        justify-content: flex-start !important;
    }

    .u-sm-flexJustifyEnd {
        justify-content: flex-end !important;
    }

    .u-sm-flexJustifyCenter {
        justify-content: center !important;
    }

    .u-sm-flexJustifyBetween {
        justify-content: space-between !important;
    }

    .u-sm-flexJustifyAround {
        justify-content: space-around !important;
    }

    /**
    * Align items in the cross axis of the current line of the flex container
    * Similar to `justify-content` but in the perpendicular direction
    */

    .u-sm-flexAlignItemsStart {
        align-items: flex-start !important;
    }

    .u-sm-flexAlignItemsEnd {
        align-items: flex-end !important;
    }

    .u-sm-flexAlignItemsCenter {
        align-items: center !important;
    }

    .u-sm-flexAlignItemsStretch {
        align-items: stretch !important;
    }

    .u-sm-flexAlignItemsBaseline {
        align-items: baseline !important;
    }

    /**
    * Aligns items within the flex container when there is extra space in the
    * cross-axis
    *
    * Has no effect when there is only one line of flex items.
    */

    .u-sm-flexAlignContentStart {
        align-content: flex-start !important;
    }

    .u-sm-flexAlignContentEnd {
        align-content: flex-end !important;
    }

    .u-sm-flexAlignContentCenter {
        align-content: center !important;
    }

    .u-sm-flexAlignContentStretch {
        align-content: stretch !important;
    }

    .u-sm-flexAlignContentBetween {
        align-content: space-between !important;
    }

    .u-sm-flexAlignContentAround {
        align-content: space-around !important;
    }

    /**
    * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
    */

    /* postcss-bem-linter: ignore */

    .u-sm-flex > *,
    .u-sm-flexInline > * {
        flex-shrink: 1; /* 1 */
    }

    /* Applies to flex items
    ========================================================================== */

    /**
    * Override default alignment of single item when specified by `align-items`
    */

    .u-sm-flexAlignSelfStart {
        align-self: flex-start !important;
    }

    .u-sm-flexAlignSelfEnd {
        align-self: flex-end !important;
    }

    .u-sm-flexAlignSelfCenter {
        align-self: center !important;
    }

    .u-sm-flexAlignSelfStretch {
        align-self: stretch !important;
    }

    .u-sm-flexAlignSelfBaseline {
        align-self: baseline !important;
    }

    .u-sm-flexAlignSelfAuto {
        align-self: auto !important;
    }

    /**
    * Change order without editing underlying HTML
    */

    .u-sm-flexOrderFirst {
        order: -1 !important;
    }

    .u-sm-flexOrderLast {
        order: 1 !important;
    }

    .u-sm-flexOrderNone {
        order: 0 !important;
    }

    /**
    * Specify the flex grow factor, which determines how much the flex item will
    * grow relative to the rest of the flex items in the flex container.
    *
    * Supports 1-5 proportions
    *
    * 1. Provide all values to avoid IE10 bug with shorthand flex
    *    http://git.io/vllC7
    */

    .u-sm-flexGrow1 {
        flex: 1 1 auto !important; /* 1 */
    }

    .u-sm-flexGrow2 {
        flex: 2 1 auto !important;
    }

    .u-sm-flexGrow3 {
        flex: 3 1 auto !important;
    }

    .u-sm-flexGrow4 {
        flex: 4 1 auto !important;
    }

    .u-sm-flexGrow5 {
        flex: 5 1 auto !important;
    }

    /**
    * Aligning with `auto` margins
    * http://www.w3.org/TR/css-flexbox-1/#auto-margins
    */

    .u-sm-flexExpand {
        margin: auto !important;
    }

    .u-sm-flexExpandLeft {
        margin-left: auto !important;
    }

    .u-sm-flexExpandRight {
        margin-right: auto !important;
    }

    .u-sm-flexExpandTop {
        margin-top: auto !important;
    }

    .u-sm-flexExpandBottom {
        margin-bottom: auto !important;
    }
}

/* ------------------------------------ *\
    Medium
\* ------------------------------------ */

@media (--c-bp-md) {

    /**
    * Container
    */

    .u-md-flex {
        display: flex !important;
    }

    .u-md-flexInline {
        display: inline-flex !important;
    }

    /**
    * Direction: row
    */

    .u-md-flexRow {
        flex-direction: row !important;
    }

    .u-md-flexRowReverse {
        flex-direction: row-reverse !important;
    }

    /**
    * Direction: column
    */

    .u-md-flexCol {
        flex-direction: column !important;
    }

    .u-md-flexColReverse {
        flex-direction: column-reverse !important;
    }

    /**
    * Wrap
    */

    .u-md-flexWrap {
        flex-wrap: wrap !important;
    }

    .u-md-flexNoWrap {
        flex-wrap: nowrap !important;
    }

    .u-md-flexWrapReverse {
        flex-wrap: wrap-reverse !important;
    }

    /**
    * Align items along the main axis of the current line of the flex container
    */

    .u-md-flexJustifyStart {
        justify-content: flex-start !important;
    }

    .u-md-flexJustifyEnd {
        justify-content: flex-end !important;
    }

    .u-md-flexJustifyCenter {
        justify-content: center !important;
    }

    .u-md-flexJustifyBetween {
        justify-content: space-between !important;
    }

    .u-md-flexJustifyAround {
        justify-content: space-around !important;
    }

    /**
    * Align items in the cross axis of the current line of the flex container
    * Similar to `justify-content` but in the perpendicular direction
    */

    .u-md-flexAlignItemsStart {
        align-items: flex-start !important;
    }

    .u-md-flexAlignItemsEnd {
        align-items: flex-end !important;
    }

    .u-md-flexAlignItemsCenter {
        align-items: center !important;
    }

    .u-md-flexAlignItemsStretch {
        align-items: stretch !important;
    }

    .u-md-flexAlignItemsBaseline {
        align-items: baseline !important;
    }

    /**
    * Aligns items within the flex container when there is extra space in the
    * cross-axis
    *
    * Has no effect when there is only one line of flex items.
    */

    .u-md-flexAlignContentStart {
        align-content: flex-start !important;
    }

    .u-md-flexAlignContentEnd {
        align-content: flex-end !important;
    }

    .u-md-flexAlignContentCenter {
        align-content: center !important;
    }

    .u-md-flexAlignContentStretch {
        align-content: stretch !important;
    }

    .u-md-flexAlignContentBetween {
        align-content: space-between !important;
    }

    .u-md-flexAlignContentAround {
        align-content: space-around !important;
    }

    /**
    * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
    */

    /* postcss-bem-linter: ignore */

    .u-md-flex > *,
    .u-md-flexInline > * {
        flex-shrink: 1; /* 1 */
    }

    /* Applies to flex items
    ========================================================================== */

    /**
    * Override default alignment of single item when specified by `align-items`
    */

    .u-md-flexAlignSelfStart {
        align-self: flex-start !important;
    }

    .u-md-flexAlignSelfEnd {
        align-self: flex-end !important;
    }

    .u-md-flexAlignSelfCenter {
        align-self: center !important;
    }

    .u-md-flexAlignSelfStretch {
        align-self: stretch !important;
    }

    .u-md-flexAlignSelfBaseline {
        align-self: baseline !important;
    }

    .u-md-flexAlignSelfAuto {
        align-self: auto !important;
    }

    /**
    * Change order without editing underlying HTML
    */

    .u-md-flexOrderFirst {
        order: -1 !important;
    }

    .u-md-flexOrderLast {
        order: 1 !important;
    }

    .u-md-flexOrderNone {
        order: 0 !important;
    }

    /**
    * Specify the flex grow factor, which determines how much the flex item will
    * grow relative to the rest of the flex items in the flex container.
    *
    * Supports 1-5 proportions
    *
    * 1. Provide all values to avoid IE10 bug with shorthand flex
    *    http://git.io/vllC7
    */

    .u-md-flexGrow1 {
        flex: 1 1 auto !important; /* 1 */
    }

    .u-md-flexGrow2 {
        flex: 2 1 auto !important;
    }

    .u-md-flexGrow3 {
        flex: 3 1 auto !important;
    }

    .u-md-flexGrow4 {
        flex: 4 1 auto !important;
    }

    .u-md-flexGrow5 {
        flex: 5 1 auto !important;
    }

    /**
    * Aligning with `auto` margins
    * http://www.w3.org/TR/css-flexbox-1/#auto-margins
    */

    .u-md-flexExpand {
        margin: auto !important;
    }

    .u-md-flexExpandLeft {
        margin-left: auto !important;
    }

    .u-md-flexExpandRight {
        margin-right: auto !important;
    }

    .u-md-flexExpandTop {
        margin-top: auto !important;
    }

    .u-md-flexExpandBottom {
        margin-bottom: auto !important;
    }
}

/* ------------------------------------ *\
    Large
\* ------------------------------------ */

@media (--c-bp-lg) {

    /**
    * Container
    */

    .u-lg-flex {
        display: flex !important;
    }

    .u-lg-flexInline {
        display: inline-flex !important;
    }

    /**
    * Direction: row
    */

    .u-lg-flexRow {
        flex-direction: row !important;
    }

    .u-lg-flexRowReverse {
        flex-direction: row-reverse !important;
    }

    /**
    * Direction: column
    */

    .u-lg-flexCol {
        flex-direction: column !important;
    }

    .u-lg-flexColReverse {
        flex-direction: column-reverse !important;
    }

    /**
    * Wrap
    */

    .u-lg-flexWrap {
        flex-wrap: wrap !important;
    }

    .u-lg-flexNoWrap {
        flex-wrap: nowrap !important;
    }

    .u-lg-flexWrapReverse {
        flex-wrap: wrap-reverse !important;
    }

    /**
    * Align items along the main axis of the current line of the flex container
    */

    .u-lg-flexJustifyStart {
        justify-content: flex-start !important;
    }

    .u-lg-flexJustifyEnd {
        justify-content: flex-end !important;
    }

    .u-lg-flexJustifyCenter {
        justify-content: center !important;
    }

    .u-lg-flexJustifyBetween {
        justify-content: space-between !important;
    }

    .u-lg-flexJustifyAround {
        justify-content: space-around !important;
    }

    /**
    * Align items in the cross axis of the current line of the flex container
    * Similar to `justify-content` but in the perpendicular direction
    */

    .u-lg-flexAlignItemsStart {
        align-items: flex-start !important;
    }

    .u-lg-flexAlignItemsEnd {
        align-items: flex-end !important;
    }

    .u-lg-flexAlignItemsCenter {
        align-items: center !important;
    }

    .u-lg-flexAlignItemsStretch {
        align-items: stretch !important;
    }

    .u-lg-flexAlignItemsBaseline {
        align-items: baseline !important;
    }

    /**
    * Aligns items within the flex container when there is extra space in the
    * cross-axis
    *
    * Has no effect when there is only one line of flex items.
    */

    .u-lg-flexAlignContentStart {
        align-content: flex-start !important;
    }

    .u-lg-flexAlignContentEnd {
        align-content: flex-end !important;
    }

    .u-lg-flexAlignContentCenter {
        align-content: center !important;
    }

    .u-lg-flexAlignContentStretch {
        align-content: stretch !important;
    }

    .u-lg-flexAlignContentBetween {
        align-content: space-between !important;
    }

    .u-lg-flexAlignContentAround {
        align-content: space-around !important;
    }

    /**
    * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
    */

    /* postcss-bem-linter: ignore */

    .u-lg-flex > *,
    .u-lg-flexInline > * {
        flex-shrink: 1; /* 1 */
    }

    /* Applies to flex items
    ========================================================================== */

    /**
    * Override default alignment of single item when specified by `align-items`
    */

    .u-lg-flexAlignSelfStart {
        align-self: flex-start !important;
    }

    .u-lg-flexAlignSelfEnd {
        align-self: flex-end !important;
    }

    .u-lg-flexAlignSelfCenter {
        align-self: center !important;
    }

    .u-lg-flexAlignSelfStretch {
        align-self: stretch !important;
    }

    .u-lg-flexAlignSelfBaseline {
        align-self: baseline !important;
    }

    .u-lg-flexAlignSelfAuto {
        align-self: auto !important;
    }

    /**
    * Change order without editing underlying HTML
    */

    .u-lg-flexOrderFirst {
        order: -1 !important;
    }

    .u-lg-flexOrderLast {
        order: 1 !important;
    }

    .u-lg-flexOrderNone {
        order: 0 !important;
    }

    /**
    * Specify the flex grow factor, which determines how much the flex item will
    * grow relative to the rest of the flex items in the flex container.
    *
    * Supports 1-5 proportions
    *
    * 1. Provide all values to avoid IE10 bug with shorthand flex
    *    http://git.io/vllC7
    */

    .u-lg-flexGrow1 {
        flex: 1 1 auto !important; /* 1 */
    }

    .u-lg-flexGrow2 {
        flex: 2 1 auto !important;
    }

    .u-lg-flexGrow3 {
        flex: 3 1 auto !important;
    }

    .u-lg-flexGrow4 {
        flex: 4 1 auto !important;
    }

    .u-lg-flexGrow5 {
        flex: 5 1 auto !important;
    }

    /**
    * Aligning with `auto` margins
    * http://www.w3.org/TR/css-flexbox-1/#auto-margins
    */

    .u-lg-flexExpand {
        margin: auto !important;
    }

    .u-lg-flexExpandLeft {
        margin-left: auto !important;
    }

    .u-lg-flexExpandRight {
        margin-right: auto !important;
    }

    .u-lg-flexExpandTop {
        margin-top: auto !important;
    }

    .u-lg-flexExpandBottom {
        margin-bottom: auto !important;
    }
}
