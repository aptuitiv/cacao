/* ==========================================================================
   Constrain
   ========================================================================== */

/** @define Constrain */

/**
 * Constrains an image of unknown size to the specified aspect ratio.
 * The image is potentially cropped using the specified gravity.
 * Similar to FlexEmbed but meant to be used specifically with images.
 *
 * This method will be used until the `object-fit` and `object-position`
 * properties are well supported. http://caniuse.com/#feat=object-fit
 */

/**
 * Constrained image container

 * Apply `background-image` inline or with another class.
 * Constrain ratio is set to 1:1 by default. Use a modifier to change it.
 * Gravity is set to center by default. Use a modifier to change it.
 */

.Constrain {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    display: block;
    padding-bottom: 100%;
    width: 100%;
}

/**
 * Contain images instead of cropping them to fit
 */

.Constrain--contain {
    background-size: contain;
}

/* Square constrain ratio
   ========================================================================== */

.Constrain--1by1 {
    padding-bottom: 100%;
}

/* Landscape constrain ratios
   ========================================================================== */

.Constrain--5by4 {
    padding-bottom: 80%;
}

.Constrain--4by3 {
    padding-bottom: 75%;
}

.Constrain--3by2 {
    padding-bottom: 66.66667%;
}

.Constrain--8by5,
.Constrain--16by10 {
    padding-bottom: 62.5%;
}

.Constrain--5by3 {
    padding-bottom: 60%;
}

.Constrain--16by9 {
    padding-bottom: 56.25%;
}

.Constrain--2by1 {
    padding-bottom: 50%;
}

.Constrain--3by1 {
    padding-bottom: 33.333333%;
}

/* Portrait constrain ratios
   ========================================================================== */

.Constrain--4by5 {
    padding-bottom: 125%;
}

.Constrain--3by4 {
    padding-bottom: 133.333333%;
}

.Constrain--2by3 {
    padding-bottom: 150%;
}

.Constrain--5by8,
.Constrain--10by16 {
    padding-bottom: 160%;
}

.Constrain--3by5 {
    padding-bottom: 166.666666%;
}

.Constrain--9by16 {
    padding-bottom: 177.777777%;
}

.Constrain--1by2 {
    padding-bottom: 200%;
}

.Constrain--1by3 {
    padding-bottom: 300%;
}

/* Crop gravities
   ========================================================================== */

/**
 * Gravitate towards edge
 */

.Constrain--top {
    background-position: top center;
}

.Constrain--bottom {
    background-position: bottom center;
}

.Constrain--left {
    background-position: left center;
}

.Constrain--right {
    background-position: right center;
}

/**
 * Gravitate towards corner
 */

.Constrain--topLeft {
    background-position: top left;
}

.Constrain--topRight {
    background-position: top right;
}

.Constrain--bottomLeft {
    background-position: bottom left;
}

.Constrain--bottomRight {
    background-position: bottom right;
}

